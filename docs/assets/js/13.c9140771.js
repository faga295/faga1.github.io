(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{433:function(e,t,s){"use strict";s.r(t);var n=s(65),r=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("p",[s("img",{attrs:{src:"https://lzc-personal-resource.oss-cn-beijing.aliyuncs.com/images/typora/p140018.png",alt:""}})]),e._v(" "),s("p",[e._v("Web端常见的上传方法是用户在浏览器或App端上传文件到应用服务器，应用服务器再把文件上传到OSS。具体流程如下图所示。")]),e._v(" "),s("p",[e._v("和数据直传到OSS相比，以上方法存在以下缺点：")]),e._v(" "),s("ul",[s("li",[e._v("上传慢：用户数据需先上传到应用服务器，之后再上传到OSS，网络传输时间比直传到OSS多一倍。如果用户数据不通过应用服务器中转，而是直传到OSS，速度将大大提升。而且OSS采用BGP带宽，能保证各地各运营商之间的传输速度。")]),e._v(" "),s("li",[e._v("扩展性差：如果后续用户数量逐渐增加，则应用服务器会成为瓶颈。")]),e._v(" "),s("li",[e._v("费用高：需要准备多台应用服务器。由于OSS上行流量是免费的，如果数据直传到OSS，将节省多台应用服务器的费用。")])]),e._v(" "),s("h2",{attrs:{id:"技术方案"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#技术方案"}},[e._v("#")]),e._v(" 技术方案")]),e._v(" "),s("p",[e._v("目前通过Web端将文件上传到OSS，有以下三种方案：")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("利用OSS Browser.js SDK将文件上传到OSS")]),e._v(" "),s("p",[e._v("该方案通过OSS Browser.js SDK直传数据到OSS，详细的SDK Demo请参见"),s("a",{attrs:{href:"https://help.aliyun.com/document_detail/64047.htm#concept-64047-zh",target:"_blank",rel:"noopener noreferrer"}},[e._v("上传文件"),s("OutboundLink")],1),e._v("。在网络条件不好的状况下可以通过断点续传的方式上传大文件。该方案在个别浏览器上有兼容性问题，目前兼容IE10及以上版本浏览器，主流版本的Edge、Chrome、Firefox、Safari浏览器，以及大部分的Android、iOS、WindowsPhone手机上的浏览器。")])]),e._v(" "),s("li",[s("p",[e._v("使用表单上传方式将文件上传到OSS")]),e._v(" "),s("p",[e._v("利用OSS提供的PostObject接口，通过表单上传的方式将文件上传到OSS。该方案兼容大部分浏览器，但在网络状况不好的时候，如果单个文件上传失败，只能重试上传。操作方法请参见"),s("a",{attrs:{href:"https://help.aliyun.com/document_detail/31923.htm#concept-iyn-vfy-5db",target:"_blank",rel:"noopener noreferrer"}},[e._v("PostObject上传方案"),s("OutboundLink")],1),e._v("。")])]),e._v(" "),s("li",[s("p",[e._v("通过小程序上传文件到OSS")]),e._v(" "),s("p",[e._v("通过小程序，如微信小程序和支付宝小程序，利用OSS提供的PostObject接口来实现表单上传。操作方式请参见"),s("a",{attrs:{href:"https://help.aliyun.com/document_detail/92883.htm#concept-egs-zv1-kfb",target:"_blank",rel:"noopener noreferrer"}},[e._v("微信小程序直传实践"),s("OutboundLink")],1),e._v("和"),s("a",{attrs:{href:"https://help.aliyun.com/document_detail/173882.htm#task-2562741",target:"_blank",rel:"noopener noreferrer"}},[e._v("支付宝小程序直传实践"),s("OutboundLink")],1),e._v("。")])])]),e._v(" "),s("p",[e._v("以上是阿里云oss文档中的说明。")]),e._v(" "),s("p",[e._v("这里我采用的是第一种方案。")]),e._v(" "),s("h2",{attrs:{id:"后端篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#后端篇"}},[e._v("#")]),e._v(" 后端篇")]),e._v(" "),s("p",[e._v("后端需要做的任务就是调用STS服务的AssumeRole接口来获取临时凭证。")]),e._v(" "),s("h3",{attrs:{id:"搭建sts服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#搭建sts服务"}},[e._v("#")]),e._v(" 搭建STS服务")]),e._v(" "),s("p",[e._v("在搭建之前先介绍一下RAM")]),e._v(" "),s("h4",{attrs:{id:"ram"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ram"}},[e._v("#")]),e._v(" RAM")]),e._v(" "),s("p",[e._v("RAM (Resource Access Management) 是阿里云提供的资源访问控制服务。RAM用户是代表任意的通过控制台或OpenAPI操作阿里云资源的人、系统或应用程序。RAM允许您在云账号下创建并管理多个用户，每个用户都有唯一的用户名、登录密码或访问密钥。\n云账户与RAM用户是一种主子关系。")]),e._v(" "),s("p",[e._v("云账号就是你的阿里云账号，RAM用户是你自己创建出来的，你可以给他指定授权策略来规定它能够云资源的权限。")]),e._v(" "),s("p",[e._v("RAM用户由阿里云账号（主账号）或具有管理员权限的其他RAM用户、RAM角色创建，创建成功后，归属于该阿里云账号，它不是独立的阿里云账号。")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://lzc-personal-resource.oss-cn-beijing.aliyuncs.com/images/typora/1970786820-5fc49a1643bed_fix732.png",alt:""}})]),e._v(" "),s("p",[e._v("RAM角色（RAM role）与RAM用户一样，都是RAM身份类型的一种。RAM角色是一种虚拟用户，没有确定的身份认证密钥，需要被一个受信的实体用户扮演才能正常使用。")]),e._v(" "),s("h4",{attrs:{id:"授权策略"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#授权策略"}},[e._v("#")]),e._v(" 授权策略")]),e._v(" "),s("p",[e._v("授权策略是一组权限的集合，它以一种策略语言来描述。通过给用户或群组附加授权策略，用户或群组中的所有用户就能获得授权策略中指定的访问权限")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://lzc-personal-resource.oss-cn-beijing.aliyuncs.com/images/typora/587166179-5fc49a314bd31_fix732.png",alt:""}})]),e._v(" "),s("p",[e._v("1）直接使用云账号访问资源\n2）使用RAM用户访问资源\n3）使用STS令牌访问资源")]),e._v(" "),s("p",[s("strong",[e._v("STS：")]),e._v("\n阿里云STS (Security Token Service) 是为阿里云账号（或RAM用户）提供短期访问权限管理的云服务。通过STS，您可以为联盟用户（您的本地账号系统所管理的用户）颁发一个自定义时效和访问权限的访问凭证(token令牌)。联盟用户可以使用STS短期访问凭证直接调用阿里云服务API，或登录阿里云管理控制台操作被授权访问的资源。\n"),s("strong",[e._v("签名：")]),e._v("\nRAM服务会对每个访问的请求进行身份验证，所以无论使用HTTP还是HTTPS协议提交请求，都需要在请求中包含签名（Signature）信息。RAM通过使用Access Key ID和Access Key Secret进行对称加密的方法来验证请求的发送者身份。Access Key ID和Access Key Secret由阿里云官方颁发给访问者（可以通过阿里云官方网站申请和管理），其中Access Key ID用于标识访问者的身份；Access Key Secret是用于加密签名字符串和服务器端验证签名字符串的密钥，必须严格保密，只有阿里云和用户知道。")]),e._v(" "),s("p",[e._v("创建RAM用户和角色具体操作："),s("a",{attrs:{href:"https://help.aliyun.com/document_detail/100624.htm#concept-xzh-nzk-2gb",target:"_blank",rel:"noopener noreferrer"}},[e._v("使用STS临时访问凭证访问OSS"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("在创建角色的时候记得添加访问oss的权限。")]),e._v(" "),s("h4",{attrs:{id:"nodejs的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs的实现"}},[e._v("#")]),e._v(" nodejs的实现")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const Core = require('@alicloud/pop-core');\n\nvar client = new Core({\n  accessKeyId: '<your RAM accessKeyId>',//用户AccessKeyId\n  accessKeySecret: '<your RAM accessKeySecret',//用户AccessKeySecret\n  endpoint: 'https://sts.aliyuncs.com',\n  apiVersion: '2015-04-01'\n});\nvar params = {\n  \"RegionId\": '<your RegionId>'，//cn-beijing\n  \"RoleArn\": '<your RoleArn>'   ，//acs:ram::xxx:role/xxx\n  \"RoleSessionName\": \"<your RoleSessionName>\"// 角色名称\n}\n\nvar requestOption = {\n  method: 'POST'\n};\n\n//发起请求，并得到响应。\nexports.getSts = (res)=>{\n\t//访问AssumeRole接口\n    client.request('AssumeRole', params, requestOption).then((result) => {\n        res.send({\n            code:20000,\n            data:result.Credentials\n        })\n      }, (ex) => {\n        console.log(ex);\n        res.send({\n            code:50000\n        })\n    })           \n}\n\n\n")])])]),s("h2",{attrs:{id:"前端篇"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端篇"}},[e._v("#")]),e._v(" 前端篇")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("export async function getSecurityToken (){\n\tconst {data} = await axios.get(`${baseURL}/securityToken`)\n\tif(data.code===20000){\n\t\treturn data.data;\n\t}\n}\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("import OSS from 'ali-oss'\nimport {getSecurityToken} from '../request.js'\n\nexport async function putObject(id,file){\n\tconst sts = await getSecurityToken()\n\t//获取临时凭证\n\tconst client = new OSS({\n\t\tregion:'<your region>',//oss-cn-beijing\n\t\taccessKeyId: sts.AccessKeyId,\n\t\taccessKeySecret: sts.AccessKeySecret,\n\t\tstsToken:sts.SecurityToken,\n\t\tbucket: '<your bucket>'\n\t})\n\ttry{\n\t\tconst result = await client.put(\n\t\t\t`${id}.png`,//这里是oss object的名称，我是以id命名的\n\t\t\tfile,//这里传入file对象、Blob数据\n\t\t)\n\t\tconsole.log(result)\n\t}catch(e){\n\t\tconsole.log(e)\n\t}\n}\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);