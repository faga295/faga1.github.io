{
  "version": 3,
  "sources": ["../../../../node_modules/marked/lib/marked.esm.js", "../../../../node_modules/.pnpm/@waline+client@2.8.1/node_modules/@waline/client/dist/component.esm.js", "../../../../node_modules/vuepress-plugin-comment2/src/client/components/Waline.ts", "dep:@CommentProvider"],
  "sourcesContent": ["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\nfunction getDefaults() {\n  return {\n    async: false,\n    baseUrl: null,\n    breaks: false,\n    extensions: null,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: null,\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tokenizer: null,\n    walkTokens: null,\n    xhtml: false\n  };\n}\n\nlet defaults = getDefaults();\n\nfunction changeDefaults(newDefaults) {\n  defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = /[&<>\"']/g;\nconst escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nconst escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\nconst escapeReplacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n  if (encode) {\n    if (escapeTest.test(html)) {\n      return html.replace(escapeReplace, getEscapeReplacement);\n    }\n  } else {\n    if (escapeTestNoEncode.test(html)) {\n      return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n    }\n  }\n\n  return html;\n}\n\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n/**\n * @param {string} html\n */\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(unescapeTest, (_, n) => {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nconst caret = /(^|[^\\[])\\^/g;\n\n/**\n * @param {string | RegExp} regex\n * @param {string} opt\n */\nfunction edit(regex, opt) {\n  regex = typeof regex === 'string' ? regex : regex.source;\n  opt = opt || '';\n  const obj = {\n    replace: (name, val) => {\n      val = val.source || val;\n      val = val.replace(caret, '$1');\n      regex = regex.replace(name, val);\n      return obj;\n    },\n    getRegex: () => {\n      return new RegExp(regex, opt);\n    }\n  };\n  return obj;\n}\n\nconst nonWordAndColonTest = /[^\\w:]/g;\nconst originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n/**\n * @param {boolean} sanitize\n * @param {string} base\n * @param {string} href\n */\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    let prot;\n    try {\n      prot = decodeURIComponent(unescape(href))\n        .replace(nonWordAndColonTest, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nconst baseUrls = {};\nconst justDomain = /^[^:]+:\\/*[^/]*$/;\nconst protocol = /^([^:]+:)[\\s\\S]*$/;\nconst domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n/**\n * @param {string} base\n * @param {string} href\n */\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (justDomain.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n  const relativeBase = base.indexOf(':') === -1;\n\n  if (href.substring(0, 2) === '//') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(protocol, '$1') + href;\n  } else if (href.charAt(0) === '/') {\n    if (relativeBase) {\n      return href;\n    }\n    return base.replace(domain, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\n\nconst noopTest = { exec: function noopTest() {} };\n\nfunction merge(obj) {\n  let i = 1,\n    target,\n    key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n      let escaped = false,\n        curr = offset;\n      while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n    cells = row.split(/ \\|/);\n  let i = 0;\n\n  // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n  if (!cells[0].trim()) { cells.shift(); }\n  if (cells.length > 0 && !cells[cells.length - 1].trim()) { cells.pop(); }\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param {string} str\n * @param {string} c\n * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n  const l = str.length;\n  if (l === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  let suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < l) {\n    const currChar = str.charAt(l - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.slice(0, l - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  const l = str.length;\n  let level = 0,\n    i = 0;\n  for (; i < l; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\nfunction checkSanitizeDeprecation(opt) {\n  if (opt && opt.sanitize && !opt.silent) {\n    console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n  }\n}\n\n// copied from https://stackoverflow.com/a/5450113/806777\n/**\n * @param {string} pattern\n * @param {number} count\n */\nfunction repeatString(pattern, count) {\n  if (count < 1) {\n    return '';\n  }\n  let result = '';\n  while (count > 1) {\n    if (count & 1) {\n      result += pattern;\n    }\n    count >>= 1;\n    pattern += pattern;\n  }\n  return result + pattern;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n  const href = link.href;\n  const title = link.title ? escape(link.title) : null;\n  const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n  if (cap[0].charAt(0) !== '!') {\n    lexer.state.inLink = true;\n    const token = {\n      type: 'link',\n      raw,\n      href,\n      title,\n      text,\n      tokens: lexer.inlineTokens(text)\n    };\n    lexer.state.inLink = false;\n    return token;\n  }\n  return {\n    type: 'image',\n    raw,\n    href,\n    title,\n    text: escape(text)\n  };\n}\n\nfunction indentCodeCompensation(raw, text) {\n  const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n  if (matchIndentToCode === null) {\n    return text;\n  }\n\n  const indentToCode = matchIndentToCode[1];\n\n  return text\n    .split('\\n')\n    .map(node => {\n      const matchIndentInNode = node.match(/^\\s+/);\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      const [indentInNode] = matchIndentInNode;\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    })\n    .join('\\n');\n}\n\n/**\n * Tokenizer\n */\nclass Tokenizer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  space(src) {\n    const cap = this.rules.block.newline.exec(src);\n    if (cap && cap[0].length > 0) {\n      return {\n        type: 'space',\n        raw: cap[0]\n      };\n    }\n  }\n\n  code(src) {\n    const cap = this.rules.block.code.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ {1,4}/gm, '');\n      return {\n        type: 'code',\n        raw: cap[0],\n        codeBlockStyle: 'indented',\n        text: !this.options.pedantic\n          ? rtrim(text, '\\n')\n          : text\n      };\n    }\n  }\n\n  fences(src) {\n    const cap = this.rules.block.fences.exec(src);\n    if (cap) {\n      const raw = cap[0];\n      const text = indentCodeCompensation(raw, cap[3] || '');\n\n      return {\n        type: 'code',\n        raw,\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text\n      };\n    }\n  }\n\n  heading(src) {\n    const cap = this.rules.block.heading.exec(src);\n    if (cap) {\n      let text = cap[2].trim();\n\n      // remove trailing #s\n      if (/#$/.test(text)) {\n        const trimmed = rtrim(text, '#');\n        if (this.options.pedantic) {\n          text = trimmed.trim();\n        } else if (!trimmed || / $/.test(trimmed)) {\n          // CommonMark requires space before trailing #s\n          text = trimmed.trim();\n        }\n      }\n\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[1].length,\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  hr(src) {\n    const cap = this.rules.block.hr.exec(src);\n    if (cap) {\n      return {\n        type: 'hr',\n        raw: cap[0]\n      };\n    }\n  }\n\n  blockquote(src) {\n    const cap = this.rules.block.blockquote.exec(src);\n    if (cap) {\n      const text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n\n      return {\n        type: 'blockquote',\n        raw: cap[0],\n        tokens: this.lexer.blockTokens(text, []),\n        text\n      };\n    }\n  }\n\n  list(src) {\n    let cap = this.rules.block.list.exec(src);\n    if (cap) {\n      let raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine,\n        line, nextLine, rawLine, itemContents, endEarly;\n\n      let bull = cap[1].trim();\n      const isordered = bull.length > 1;\n\n      const list = {\n        type: 'list',\n        raw: '',\n        ordered: isordered,\n        start: isordered ? +bull.slice(0, -1) : '',\n        loose: false,\n        items: []\n      };\n\n      bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n\n      if (this.options.pedantic) {\n        bull = isordered ? bull : '[*+-]';\n      }\n\n      // Get next list item\n      const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n\n      // Check if current bullet point can start a new List Item\n      while (src) {\n        endEarly = false;\n        if (!(cap = itemRegex.exec(src))) {\n          break;\n        }\n\n        if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n          break;\n        }\n\n        raw = cap[0];\n        src = src.substring(raw.length);\n\n        line = cap[2].split('\\n', 1)[0];\n        nextLine = src.split('\\n', 1)[0];\n\n        if (this.options.pedantic) {\n          indent = 2;\n          itemContents = line.trimLeft();\n        } else {\n          indent = cap[2].search(/[^ ]/); // Find first non-space char\n          indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n          itemContents = line.slice(indent);\n          indent += cap[1].length;\n        }\n\n        blankLine = false;\n\n        if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n          raw += nextLine + '\\n';\n          src = src.substring(nextLine.length + 1);\n          endEarly = true;\n        }\n\n        if (!endEarly) {\n          const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))`);\n          const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n          const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n          const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n\n          // Check if following lines should be included in List Item\n          while (src) {\n            rawLine = src.split('\\n', 1)[0];\n            line = rawLine;\n\n            // Re-align to follow commonmark nesting rules\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            }\n\n            // End list item if found code fences\n            if (fencesBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new heading\n            if (headingBeginRegex.test(line)) {\n              break;\n            }\n\n            // End list item if found start of new bullet\n            if (nextBulletRegex.test(line)) {\n              break;\n            }\n\n            // Horizontal rule found\n            if (hrRegex.test(src)) {\n              break;\n            }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) { // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n            } else if (!blankLine) { // Until blank line, item doesn't need indentation\n              itemContents += '\\n' + line;\n            } else { // Otherwise, improper indentation ends this item\n              break;\n            }\n\n            if (!blankLine && !line.trim()) { // Check if current line is blank\n              blankLine = true;\n            }\n\n            raw += rawLine + '\\n';\n            src = src.substring(rawLine.length + 1);\n          }\n        }\n\n        if (!list.loose) {\n          // If the previous item ended with a blank line, the list is loose\n          if (endsWithBlankLine) {\n            list.loose = true;\n          } else if (/\\n *\\n *$/.test(raw)) {\n            endsWithBlankLine = true;\n          }\n        }\n\n        // Check for task list items\n        if (this.options.gfm) {\n          istask = /^\\[[ xX]\\] /.exec(itemContents);\n          if (istask) {\n            ischecked = istask[0] !== '[ ] ';\n            itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n          }\n        }\n\n        list.items.push({\n          type: 'list_item',\n          raw,\n          task: !!istask,\n          checked: ischecked,\n          loose: false,\n          text: itemContents\n        });\n\n        list.raw += raw;\n      }\n\n      // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n      list.items[list.items.length - 1].raw = raw.trimRight();\n      list.items[list.items.length - 1].text = itemContents.trimRight();\n      list.raw = list.raw.trimRight();\n\n      const l = list.items.length;\n\n      // Item child tokens handled here at end because we needed to have the final item to trim it first\n      for (i = 0; i < l; i++) {\n        this.lexer.state.top = false;\n        list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n        const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n        const hasMultipleLineBreaks = spacers.every(t => {\n          const chars = t.raw.split('');\n          let lineBreaks = 0;\n          for (const char of chars) {\n            if (char === '\\n') {\n              lineBreaks += 1;\n            }\n            if (lineBreaks > 1) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n\n        if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n          // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n          list.loose = true;\n          list.items[i].loose = true;\n        }\n      }\n\n      return list;\n    }\n  }\n\n  html(src) {\n    const cap = this.rules.block.html.exec(src);\n    if (cap) {\n      const token = {\n        type: 'html',\n        raw: cap[0],\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      };\n      if (this.options.sanitize) {\n        const text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n        token.type = 'paragraph';\n        token.text = text;\n        token.tokens = this.lexer.inline(text);\n      }\n      return token;\n    }\n  }\n\n  def(src) {\n    const cap = this.rules.block.def.exec(src);\n    if (cap) {\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      return {\n        type: 'def',\n        tag,\n        raw: cap[0],\n        href: cap[2],\n        title: cap[3]\n      };\n    }\n  }\n\n  table(src) {\n    const cap = this.rules.block.table.exec(src);\n    if (cap) {\n      const item = {\n        type: 'table',\n        header: splitCells(cap[1]).map(c => { return { text: c }; }),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        item.raw = cap[0];\n\n        let l = item.align.length;\n        let i, j, k, row;\n        for (i = 0; i < l; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        l = item.rows.length;\n        for (i = 0; i < l; i++) {\n          item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => { return { text: c }; });\n        }\n\n        // parse child tokens inside headers and cells\n\n        // header child tokens\n        l = item.header.length;\n        for (j = 0; j < l; j++) {\n          item.header[j].tokens = this.lexer.inline(item.header[j].text);\n        }\n\n        // cell child tokens\n        l = item.rows.length;\n        for (j = 0; j < l; j++) {\n          row = item.rows[j];\n          for (k = 0; k < row.length; k++) {\n            row[k].tokens = this.lexer.inline(row[k].text);\n          }\n        }\n\n        return item;\n      }\n    }\n  }\n\n  lheading(src) {\n    const cap = this.rules.block.lheading.exec(src);\n    if (cap) {\n      return {\n        type: 'heading',\n        raw: cap[0],\n        depth: cap[2].charAt(0) === '=' ? 1 : 2,\n        text: cap[1],\n        tokens: this.lexer.inline(cap[1])\n      };\n    }\n  }\n\n  paragraph(src) {\n    const cap = this.rules.block.paragraph.exec(src);\n    if (cap) {\n      const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n        ? cap[1].slice(0, -1)\n        : cap[1];\n      return {\n        type: 'paragraph',\n        raw: cap[0],\n        text,\n        tokens: this.lexer.inline(text)\n      };\n    }\n  }\n\n  text(src) {\n    const cap = this.rules.block.text.exec(src);\n    if (cap) {\n      return {\n        type: 'text',\n        raw: cap[0],\n        text: cap[0],\n        tokens: this.lexer.inline(cap[0])\n      };\n    }\n  }\n\n  escape(src) {\n    const cap = this.rules.inline.escape.exec(src);\n    if (cap) {\n      return {\n        type: 'escape',\n        raw: cap[0],\n        text: escape(cap[1])\n      };\n    }\n  }\n\n  tag(src) {\n    const cap = this.rules.inline.tag.exec(src);\n    if (cap) {\n      if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n        this.lexer.state.inLink = true;\n      } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.lexer.state.inLink = false;\n      }\n      if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = true;\n      } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.lexer.state.inRawBlock = false;\n      }\n\n      return {\n        type: this.options.sanitize\n          ? 'text'\n          : 'html',\n        raw: cap[0],\n        inLink: this.lexer.state.inLink,\n        inRawBlock: this.lexer.state.inRawBlock,\n        text: this.options.sanitize\n          ? (this.options.sanitizer\n            ? this.options.sanitizer(cap[0])\n            : escape(cap[0]))\n          : cap[0]\n      };\n    }\n  }\n\n  link(src) {\n    const cap = this.rules.inline.link.exec(src);\n    if (cap) {\n      const trimmedUrl = cap[2].trim();\n      if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n        // commonmark requires matching angle brackets\n        if (!(/>$/.test(trimmedUrl))) {\n          return;\n        }\n\n        // ending angle bracket cannot be escaped\n        const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n        if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n          return;\n        }\n      } else {\n        // find closing parenthesis\n        const lastParenIndex = findClosingBracket(cap[2], '()');\n        if (lastParenIndex > -1) {\n          const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n          const linkLen = start + cap[1].length + lastParenIndex;\n          cap[2] = cap[2].substring(0, lastParenIndex);\n          cap[0] = cap[0].substring(0, linkLen).trim();\n          cap[3] = '';\n        }\n      }\n      let href = cap[2];\n      let title = '';\n      if (this.options.pedantic) {\n        // split pedantic href and title\n        const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n\n      href = href.trim();\n      if (/^</.test(href)) {\n        if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n          // pedantic allows starting angle bracket without ending angle bracket\n          href = href.slice(1);\n        } else {\n          href = href.slice(1, -1);\n        }\n      }\n      return outputLink(cap, {\n        href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n        title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n      }, cap[0], this.lexer);\n    }\n  }\n\n  reflink(src, links) {\n    let cap;\n    if ((cap = this.rules.inline.reflink.exec(src))\n        || (cap = this.rules.inline.nolink.exec(src))) {\n      let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = links[link.toLowerCase()];\n      if (!link || !link.href) {\n        const text = cap[0].charAt(0);\n        return {\n          type: 'text',\n          raw: text,\n          text\n        };\n      }\n      return outputLink(cap, link, cap[0], this.lexer);\n    }\n  }\n\n  emStrong(src, maskedSrc, prevChar = '') {\n    let match = this.rules.inline.emStrong.lDelim.exec(src);\n    if (!match) return;\n\n    // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n    if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u)) return;\n\n    const nextChar = match[1] || match[2] || '';\n\n    if (!nextChar || (nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar)))) {\n      const lLength = match[0].length - 1;\n      let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n\n      const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n      endReg.lastIndex = 0;\n\n      // Clip maskedSrc to same section of string as src (move to lexer?)\n      maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n      while ((match = endReg.exec(maskedSrc)) != null) {\n        rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n\n        if (!rDelim) continue; // skip single * in __abc*abc__\n\n        rLength = rDelim.length;\n\n        if (match[3] || match[4]) { // found another Left Delim\n          delimTotal += rLength;\n          continue;\n        } else if (match[5] || match[6]) { // either Left or Right Delim\n          if (lLength % 3 && !((lLength + rLength) % 3)) {\n            midDelimTotal += rLength;\n            continue; // CommonMark Emphasis Rules 9-10\n          }\n        }\n\n        delimTotal -= rLength;\n\n        if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n\n        // Remove extra characters. *a*** -> *a*\n        rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n\n        // Create `em` if smallest delimiter has odd char count. *a***\n        if (Math.min(lLength, rLength) % 2) {\n          const text = src.slice(1, lLength + match.index + rLength);\n          return {\n            type: 'em',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n\n        // Create 'strong' if smallest delimiter has even char count. **a***\n        const text = src.slice(2, lLength + match.index + rLength - 1);\n        return {\n          type: 'strong',\n          raw: src.slice(0, lLength + match.index + rLength + 1),\n          text,\n          tokens: this.lexer.inlineTokens(text)\n        };\n      }\n    }\n  }\n\n  codespan(src) {\n    const cap = this.rules.inline.code.exec(src);\n    if (cap) {\n      let text = cap[2].replace(/\\n/g, ' ');\n      const hasNonSpaceChars = /[^ ]/.test(text);\n      const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n      if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n        text = text.substring(1, text.length - 1);\n      }\n      text = escape(text, true);\n      return {\n        type: 'codespan',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n\n  br(src) {\n    const cap = this.rules.inline.br.exec(src);\n    if (cap) {\n      return {\n        type: 'br',\n        raw: cap[0]\n      };\n    }\n  }\n\n  del(src) {\n    const cap = this.rules.inline.del.exec(src);\n    if (cap) {\n      return {\n        type: 'del',\n        raw: cap[0],\n        text: cap[2],\n        tokens: this.lexer.inlineTokens(cap[2])\n      };\n    }\n  }\n\n  autolink(src, mangle) {\n    const cap = this.rules.inline.autolink.exec(src);\n    if (cap) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  url(src, mangle) {\n    let cap;\n    if (cap = this.rules.inline.url.exec(src)) {\n      let text, href;\n      if (cap[2] === '@') {\n        text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        let prevCapZero;\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      return {\n        type: 'link',\n        raw: cap[0],\n        text,\n        href,\n        tokens: [\n          {\n            type: 'text',\n            raw: text,\n            text\n          }\n        ]\n      };\n    }\n  }\n\n  inlineText(src, smartypants) {\n    const cap = this.rules.inline.text.exec(src);\n    if (cap) {\n      let text;\n      if (this.lexer.state.inRawBlock) {\n        text = this.options.sanitize ? (this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0])) : cap[0];\n      } else {\n        text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n      }\n      return {\n        type: 'text',\n        raw: cap[0],\n        text\n      };\n    }\n  }\n}\n\n/**\n * Block-Level Grammar\n */\nconst block = {\n  newline: /^(?: *(?:\\n|$))+/,\n  code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n  fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n  hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n  heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noopTest,\n  lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n  // regex template, placeholders will be replaced according to different paragraph\n  // interruption rules of commonmark and the original markdown spec:\n  _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n  .replace('bull', block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '')\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n});\n\nblock.gfm.table = edit(block.gfm.table)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('blockquote', ' {0,3}>')\n  .replace('code', ' {4}[^\\\\n]')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.gfm.paragraph = edit(block._paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', ' {0,3}#{1,6} ')\n  .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>')\n  .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n  .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n  heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n  fences: noopTest, // fences not supported\n  paragraph: edit(block.normal._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' *#{1,6} *[^\\n]')\n    .replace('lheading', block.lheading)\n    .replace('blockquote', ' {0,3}>')\n    .replace('|fences', '')\n    .replace('|list', '')\n    .replace('|html', '')\n    .getRegex()\n});\n\n/**\n * Inline-Level Grammar\n */\nconst inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noopTest,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n  nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n  reflinkSearch: 'reflink|nolink(?!\\\\()',\n  emStrong: {\n    lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n    //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n    //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n    rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n    rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n  },\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noopTest,\n  text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n  punctuation: /^([\\spunctuation])/\n};\n\n// list of punctuation marks from CommonMark spec\n// without * and _ to handle the different emphasis markers * and _\ninline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\ninline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex();\n\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\ninline.escapedEmSt = /\\\\\\*|\\\\_/g;\n\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim)\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g')\n  .replace(/punct/g, inline._punctuation)\n  .getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', inline._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.nolink = edit(inline.nolink)\n  .replace('ref', block._label)\n  .getRegex();\n\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n  .replace('reflink', inline.reflink)\n  .replace('nolink', inline.nolink)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: {\n    start: /^__|\\*\\*/,\n    middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n    endAst: /\\*\\*(?!\\*)/g,\n    endUnd: /__(?!_)/g\n  },\n  em: {\n    start: /^_|\\*/,\n    middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n    endAst: /\\*(?!\\*)/g,\n    endUnd: /_(?!_)/g\n  },\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n  text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text)\n    .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n    .replace(/\\{2,\\}/g, '*')\n    .getRegex()\n});\n\n/**\n * smartypants text replacement\n * @param {string} text\n */\nfunction smartypants(text) {\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n}\n\n/**\n * mangle email addresses\n * @param {string} text\n */\nfunction mangle(text) {\n  let out = '',\n    i,\n    ch;\n\n  const l = text.length;\n  for (i = 0; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n}\n\n/**\n * Block Lexer\n */\nclass Lexer {\n  constructor(options) {\n    this.tokens = [];\n    this.tokens.links = Object.create(null);\n    this.options = options || defaults;\n    this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n    this.tokenizer = this.options.tokenizer;\n    this.tokenizer.options = this.options;\n    this.tokenizer.lexer = this;\n    this.inlineQueue = [];\n    this.state = {\n      inLink: false,\n      inRawBlock: false,\n      top: true\n    };\n\n    const rules = {\n      block: block.normal,\n      inline: inline.normal\n    };\n\n    if (this.options.pedantic) {\n      rules.block = block.pedantic;\n      rules.inline = inline.pedantic;\n    } else if (this.options.gfm) {\n      rules.block = block.gfm;\n      if (this.options.breaks) {\n        rules.inline = inline.breaks;\n      } else {\n        rules.inline = inline.gfm;\n      }\n    }\n    this.tokenizer.rules = rules;\n  }\n\n  /**\n   * Expose Rules\n   */\n  static get rules() {\n    return {\n      block,\n      inline\n    };\n  }\n\n  /**\n   * Static Lex Method\n   */\n  static lex(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.lex(src);\n  }\n\n  /**\n   * Static Lex Inline Method\n   */\n  static lexInline(src, options) {\n    const lexer = new Lexer(options);\n    return lexer.inlineTokens(src);\n  }\n\n  /**\n   * Preprocessing\n   */\n  lex(src) {\n    src = src\n      .replace(/\\r\\n|\\r/g, '\\n');\n\n    this.blockTokens(src, this.tokens);\n\n    let next;\n    while (next = this.inlineQueue.shift()) {\n      this.inlineTokens(next.src, next.tokens);\n    }\n\n    return this.tokens;\n  }\n\n  /**\n   * Lexing\n   */\n  blockTokens(src, tokens = []) {\n    if (this.options.pedantic) {\n      src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n    } else {\n      src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n        return leading + '    '.repeat(tabs.length);\n      });\n    }\n\n    let token, lastToken, cutSrc, lastParagraphClipped;\n\n    while (src) {\n      if (this.options.extensions\n        && this.options.extensions.block\n        && this.options.extensions.block.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // newline\n      if (token = this.tokenizer.space(src)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.length === 1 && tokens.length > 0) {\n          // if there's a single \\n as a spacer, it's terminating the last line,\n          // so move it there so that we don't get unecessary paragraph tags\n          tokens[tokens.length - 1].raw += '\\n';\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.code(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        // An indented code block cannot interrupt a paragraph.\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // fences\n      if (token = this.tokenizer.fences(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // heading\n      if (token = this.tokenizer.heading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // hr\n      if (token = this.tokenizer.hr(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // blockquote\n      if (token = this.tokenizer.blockquote(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // list\n      if (token = this.tokenizer.list(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // html\n      if (token = this.tokenizer.html(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // def\n      if (token = this.tokenizer.def(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.raw;\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else if (!this.tokens.links[token.tag]) {\n          this.tokens.links[token.tag] = {\n            href: token.href,\n            title: token.title\n          };\n        }\n        continue;\n      }\n\n      // table (gfm)\n      if (token = this.tokenizer.table(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // lheading\n      if (token = this.tokenizer.lheading(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // top-level paragraph\n      // prevent paragraph consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startBlock) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startBlock.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n        lastToken = tokens[tokens.length - 1];\n        if (lastParagraphClipped && lastToken.type === 'paragraph') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        lastParagraphClipped = (cutSrc.length !== src.length);\n        src = src.substring(token.raw.length);\n        continue;\n      }\n\n      // text\n      if (token = this.tokenizer.text(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += '\\n' + token.raw;\n          lastToken.text += '\\n' + token.text;\n          this.inlineQueue.pop();\n          this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    this.state.top = true;\n    return tokens;\n  }\n\n  inline(src, tokens = []) {\n    this.inlineQueue.push({ src, tokens });\n    return tokens;\n  }\n\n  /**\n   * Lexing/Compiling\n   */\n  inlineTokens(src, tokens = []) {\n    let token, lastToken, cutSrc;\n\n    // String with links masked to avoid interference with em and strong\n    let maskedSrc = src;\n    let match;\n    let keepPrevChar, prevChar;\n\n    // Mask out reflinks\n    if (this.tokens.links) {\n      const links = Object.keys(this.tokens.links);\n      if (links.length > 0) {\n        while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n          if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n          }\n        }\n      }\n    }\n    // Mask out other blocks\n    while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n    }\n\n    // Mask out escaped em & strong delimiters\n    while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n      maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n    }\n\n    while (src) {\n      if (!keepPrevChar) {\n        prevChar = '';\n      }\n      keepPrevChar = false;\n\n      // extensions\n      if (this.options.extensions\n        && this.options.extensions.inline\n        && this.options.extensions.inline.some((extTokenizer) => {\n          if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n          return false;\n        })) {\n        continue;\n      }\n\n      // escape\n      if (token = this.tokenizer.escape(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // tag\n      if (token = this.tokenizer.tag(src)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // link\n      if (token = this.tokenizer.link(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // reflink, nolink\n      if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n        src = src.substring(token.raw.length);\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      // em & strong\n      if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // code\n      if (token = this.tokenizer.codespan(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // br\n      if (token = this.tokenizer.br(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // del (gfm)\n      if (token = this.tokenizer.del(src)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // autolink\n      if (token = this.tokenizer.autolink(src, mangle)) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // url (gfm)\n      if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n        src = src.substring(token.raw.length);\n        tokens.push(token);\n        continue;\n      }\n\n      // text\n      // prevent inlineText consuming extensions by clipping 'src' to extension start\n      cutSrc = src;\n      if (this.options.extensions && this.options.extensions.startInline) {\n        let startIndex = Infinity;\n        const tempSrc = src.slice(1);\n        let tempStart;\n        this.options.extensions.startInline.forEach(function(getStartIndex) {\n          tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n          if (typeof tempStart === 'number' && tempStart >= 0) { startIndex = Math.min(startIndex, tempStart); }\n        });\n        if (startIndex < Infinity && startIndex >= 0) {\n          cutSrc = src.substring(0, startIndex + 1);\n        }\n      }\n      if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n        src = src.substring(token.raw.length);\n        if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n          prevChar = token.raw.slice(-1);\n        }\n        keepPrevChar = true;\n        lastToken = tokens[tokens.length - 1];\n        if (lastToken && lastToken.type === 'text') {\n          lastToken.raw += token.raw;\n          lastToken.text += token.text;\n        } else {\n          tokens.push(token);\n        }\n        continue;\n      }\n\n      if (src) {\n        const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n        if (this.options.silent) {\n          console.error(errMsg);\n          break;\n        } else {\n          throw new Error(errMsg);\n        }\n      }\n    }\n\n    return tokens;\n  }\n}\n\n/**\n * Renderer\n */\nclass Renderer {\n  constructor(options) {\n    this.options = options || defaults;\n  }\n\n  code(code, infostring, escaped) {\n    const lang = (infostring || '').match(/\\S*/)[0];\n    if (this.options.highlight) {\n      const out = this.options.highlight(code, lang);\n      if (out != null && out !== code) {\n        escaped = true;\n        code = out;\n      }\n    }\n\n    code = code.replace(/\\n$/, '') + '\\n';\n\n    if (!lang) {\n      return '<pre><code>'\n        + (escaped ? code : escape(code, true))\n        + '</code></pre>\\n';\n    }\n\n    return '<pre><code class=\"'\n      + this.options.langPrefix\n      + escape(lang, true)\n      + '\">'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>\\n';\n  }\n\n  /**\n   * @param {string} quote\n   */\n  blockquote(quote) {\n    return `<blockquote>\\n${quote}</blockquote>\\n`;\n  }\n\n  html(html) {\n    return html;\n  }\n\n  /**\n   * @param {string} text\n   * @param {string} level\n   * @param {string} raw\n   * @param {any} slugger\n   */\n  heading(text, level, raw, slugger) {\n    if (this.options.headerIds) {\n      const id = this.options.headerPrefix + slugger.slug(raw);\n      return `<h${level} id=\"${id}\">${text}</h${level}>\\n`;\n    }\n\n    // ignore IDs\n    return `<h${level}>${text}</h${level}>\\n`;\n  }\n\n  hr() {\n    return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n  }\n\n  list(body, ordered, start) {\n    const type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n    return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n  }\n\n  /**\n   * @param {string} text\n   */\n  listitem(text) {\n    return `<li>${text}</li>\\n`;\n  }\n\n  checkbox(checked) {\n    return '<input '\n      + (checked ? 'checked=\"\" ' : '')\n      + 'disabled=\"\" type=\"checkbox\"'\n      + (this.options.xhtml ? ' /' : '')\n      + '> ';\n  }\n\n  /**\n   * @param {string} text\n   */\n  paragraph(text) {\n    return `<p>${text}</p>\\n`;\n  }\n\n  /**\n   * @param {string} header\n   * @param {string} body\n   */\n  table(header, body) {\n    if (body) body = `<tbody>${body}</tbody>`;\n\n    return '<table>\\n'\n      + '<thead>\\n'\n      + header\n      + '</thead>\\n'\n      + body\n      + '</table>\\n';\n  }\n\n  /**\n   * @param {string} content\n   */\n  tablerow(content) {\n    return `<tr>\\n${content}</tr>\\n`;\n  }\n\n  tablecell(content, flags) {\n    const type = flags.header ? 'th' : 'td';\n    const tag = flags.align\n      ? `<${type} align=\"${flags.align}\">`\n      : `<${type}>`;\n    return tag + content + `</${type}>\\n`;\n  }\n\n  /**\n   * span level renderer\n   * @param {string} text\n   */\n  strong(text) {\n    return `<strong>${text}</strong>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  em(text) {\n    return `<em>${text}</em>`;\n  }\n\n  /**\n   * @param {string} text\n   */\n  codespan(text) {\n    return `<code>${text}</code>`;\n  }\n\n  br() {\n    return this.options.xhtml ? '<br/>' : '<br>';\n  }\n\n  /**\n   * @param {string} text\n   */\n  del(text) {\n    return `<del>${text}</del>`;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  link(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n    let out = '<a href=\"' + escape(href) + '\"';\n    if (title) {\n      out += ' title=\"' + title + '\"';\n    }\n    out += '>' + text + '</a>';\n    return out;\n  }\n\n  /**\n   * @param {string} href\n   * @param {string} title\n   * @param {string} text\n   */\n  image(href, title, text) {\n    href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n    if (href === null) {\n      return text;\n    }\n\n    let out = `<img src=\"${href}\" alt=\"${text}\"`;\n    if (title) {\n      out += ` title=\"${title}\"`;\n    }\n    out += this.options.xhtml ? '/>' : '>';\n    return out;\n  }\n\n  text(text) {\n    return text;\n  }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass TextRenderer {\n  // no need for block level renderers\n  strong(text) {\n    return text;\n  }\n\n  em(text) {\n    return text;\n  }\n\n  codespan(text) {\n    return text;\n  }\n\n  del(text) {\n    return text;\n  }\n\n  html(text) {\n    return text;\n  }\n\n  text(text) {\n    return text;\n  }\n\n  link(href, title, text) {\n    return '' + text;\n  }\n\n  image(href, title, text) {\n    return '' + text;\n  }\n\n  br() {\n    return '';\n  }\n}\n\n/**\n * Slugger generates header id\n */\nclass Slugger {\n  constructor() {\n    this.seen = {};\n  }\n\n  /**\n   * @param {string} value\n   */\n  serialize(value) {\n    return value\n      .toLowerCase()\n      .trim()\n      // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '')\n      // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n      .replace(/\\s/g, '-');\n  }\n\n  /**\n   * Finds the next safe (unique) slug to use\n   * @param {string} originalSlug\n   * @param {boolean} isDryRun\n   */\n  getNextSafeSlug(originalSlug, isDryRun) {\n    let slug = originalSlug;\n    let occurenceAccumulator = 0;\n    if (this.seen.hasOwnProperty(slug)) {\n      occurenceAccumulator = this.seen[originalSlug];\n      do {\n        occurenceAccumulator++;\n        slug = originalSlug + '-' + occurenceAccumulator;\n      } while (this.seen.hasOwnProperty(slug));\n    }\n    if (!isDryRun) {\n      this.seen[originalSlug] = occurenceAccumulator;\n      this.seen[slug] = 0;\n    }\n    return slug;\n  }\n\n  /**\n   * Convert string to unique id\n   * @param {object} [options]\n   * @param {boolean} [options.dryrun] Generates the next unique slug without\n   * updating the internal accumulator.\n   */\n  slug(value, options = {}) {\n    const slug = this.serialize(value);\n    return this.getNextSafeSlug(slug, options.dryrun);\n  }\n}\n\n/**\n * Parsing & Compiling\n */\nclass Parser {\n  constructor(options) {\n    this.options = options || defaults;\n    this.options.renderer = this.options.renderer || new Renderer();\n    this.renderer = this.options.renderer;\n    this.renderer.options = this.options;\n    this.textRenderer = new TextRenderer();\n    this.slugger = new Slugger();\n  }\n\n  /**\n   * Static Parse Method\n   */\n  static parse(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parse(tokens);\n  }\n\n  /**\n   * Static Parse Inline Method\n   */\n  static parseInline(tokens, options) {\n    const parser = new Parser(options);\n    return parser.parseInline(tokens);\n  }\n\n  /**\n   * Parse Loop\n   */\n  parse(tokens, top = true) {\n    let out = '',\n      i,\n      j,\n      k,\n      l2,\n      l3,\n      row,\n      cell,\n      header,\n      body,\n      token,\n      ordered,\n      start,\n      loose,\n      itemBody,\n      item,\n      checked,\n      task,\n      checkbox,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'space': {\n          continue;\n        }\n        case 'hr': {\n          out += this.renderer.hr();\n          continue;\n        }\n        case 'heading': {\n          out += this.renderer.heading(\n            this.parseInline(token.tokens),\n            token.depth,\n            unescape(this.parseInline(token.tokens, this.textRenderer)),\n            this.slugger);\n          continue;\n        }\n        case 'code': {\n          out += this.renderer.code(token.text,\n            token.lang,\n            token.escaped);\n          continue;\n        }\n        case 'table': {\n          header = '';\n\n          // header\n          cell = '';\n          l2 = token.header.length;\n          for (j = 0; j < l2; j++) {\n            cell += this.renderer.tablecell(\n              this.parseInline(token.header[j].tokens),\n              { header: true, align: token.align[j] }\n            );\n          }\n          header += this.renderer.tablerow(cell);\n\n          body = '';\n          l2 = token.rows.length;\n          for (j = 0; j < l2; j++) {\n            row = token.rows[j];\n\n            cell = '';\n            l3 = row.length;\n            for (k = 0; k < l3; k++) {\n              cell += this.renderer.tablecell(\n                this.parseInline(row[k].tokens),\n                { header: false, align: token.align[k] }\n              );\n            }\n\n            body += this.renderer.tablerow(cell);\n          }\n          out += this.renderer.table(header, body);\n          continue;\n        }\n        case 'blockquote': {\n          body = this.parse(token.tokens);\n          out += this.renderer.blockquote(body);\n          continue;\n        }\n        case 'list': {\n          ordered = token.ordered;\n          start = token.start;\n          loose = token.loose;\n          l2 = token.items.length;\n\n          body = '';\n          for (j = 0; j < l2; j++) {\n            item = token.items[j];\n            checked = item.checked;\n            task = item.task;\n\n            itemBody = '';\n            if (item.task) {\n              checkbox = this.renderer.checkbox(checked);\n              if (loose) {\n                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                  item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                  if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                    item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                  }\n                } else {\n                  item.tokens.unshift({\n                    type: 'text',\n                    text: checkbox\n                  });\n                }\n              } else {\n                itemBody += checkbox;\n              }\n            }\n\n            itemBody += this.parse(item.tokens, loose);\n            body += this.renderer.listitem(itemBody, task, checked);\n          }\n\n          out += this.renderer.list(body, ordered, start);\n          continue;\n        }\n        case 'html': {\n          // TODO parse inline content if parameter markdown=1\n          out += this.renderer.html(token.text);\n          continue;\n        }\n        case 'paragraph': {\n          out += this.renderer.paragraph(this.parseInline(token.tokens));\n          continue;\n        }\n        case 'text': {\n          body = token.tokens ? this.parseInline(token.tokens) : token.text;\n          while (i + 1 < l && tokens[i + 1].type === 'text') {\n            token = tokens[++i];\n            body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n          }\n          out += top ? this.renderer.paragraph(body) : body;\n          continue;\n        }\n\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n\n    return out;\n  }\n\n  /**\n   * Parse Inline Tokens\n   */\n  parseInline(tokens, renderer) {\n    renderer = renderer || this.renderer;\n    let out = '',\n      i,\n      token,\n      ret;\n\n    const l = tokens.length;\n    for (i = 0; i < l; i++) {\n      token = tokens[i];\n\n      // Run any renderer extensions\n      if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n        ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n        if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n          out += ret || '';\n          continue;\n        }\n      }\n\n      switch (token.type) {\n        case 'escape': {\n          out += renderer.text(token.text);\n          break;\n        }\n        case 'html': {\n          out += renderer.html(token.text);\n          break;\n        }\n        case 'link': {\n          out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'image': {\n          out += renderer.image(token.href, token.title, token.text);\n          break;\n        }\n        case 'strong': {\n          out += renderer.strong(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'em': {\n          out += renderer.em(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'codespan': {\n          out += renderer.codespan(token.text);\n          break;\n        }\n        case 'br': {\n          out += renderer.br();\n          break;\n        }\n        case 'del': {\n          out += renderer.del(this.parseInline(token.tokens, renderer));\n          break;\n        }\n        case 'text': {\n          out += renderer.text(token.text);\n          break;\n        }\n        default: {\n          const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n          if (this.options.silent) {\n            console.error(errMsg);\n            return;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n    }\n    return out;\n  }\n}\n\n/**\n * Marked\n */\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (typeof opt === 'function') {\n    callback = opt;\n    opt = null;\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  if (callback) {\n    const highlight = opt.highlight;\n    let tokens;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    const done = function(err) {\n      let out;\n\n      if (!err) {\n        try {\n          if (opt.walkTokens) {\n            marked.walkTokens(tokens, opt.walkTokens);\n          }\n          out = Parser.parse(tokens, opt);\n        } catch (e) {\n          err = e;\n        }\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!tokens.length) return done();\n\n    let pending = 0;\n    marked.walkTokens(tokens, function(token) {\n      if (token.type === 'code') {\n        pending++;\n        setTimeout(() => {\n          highlight(token.text, token.lang, function(err, code) {\n            if (err) {\n              return done(err);\n            }\n            if (code != null && code !== token.text) {\n              token.text = code;\n              token.escaped = true;\n            }\n\n            pending--;\n            if (pending === 0) {\n              done();\n            }\n          });\n        }, 0);\n      }\n    });\n\n    if (pending === 0) {\n      done();\n    }\n\n    return;\n  }\n\n  function onError(e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n\n  try {\n    const tokens = Lexer.lex(src, opt);\n    if (opt.walkTokens) {\n      if (opt.async) {\n        return Promise.all(marked.walkTokens(tokens, opt.walkTokens))\n          .then(() => {\n            return Parser.parse(tokens, opt);\n          })\n          .catch(onError);\n      }\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parse(tokens, opt);\n  } catch (e) {\n    onError(e);\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  changeDefaults(marked.defaults);\n  return marked;\n};\n\nmarked.getDefaults = getDefaults;\n\nmarked.defaults = defaults;\n\n/**\n * Use Extension\n */\n\nmarked.use = function(...args) {\n  const opts = merge({}, ...args);\n  const extensions = marked.defaults.extensions || { renderers: {}, childTokens: {} };\n  let hasExtensions;\n\n  args.forEach((pack) => {\n    // ==-- Parse \"addon\" extensions --== //\n    if (pack.extensions) {\n      hasExtensions = true;\n      pack.extensions.forEach((ext) => {\n        if (!ext.name) {\n          throw new Error('extension name required');\n        }\n        if (ext.renderer) { // Renderer extensions\n          const prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n          if (prevRenderer) {\n            // Replace extension with func to run new extension but fall back if false\n            extensions.renderers[ext.name] = function(...args) {\n              let ret = ext.renderer.apply(this, args);\n              if (ret === false) {\n                ret = prevRenderer.apply(this, args);\n              }\n              return ret;\n            };\n          } else {\n            extensions.renderers[ext.name] = ext.renderer;\n          }\n        }\n        if (ext.tokenizer) { // Tokenizer Extensions\n          if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n            throw new Error(\"extension level must be 'block' or 'inline'\");\n          }\n          if (extensions[ext.level]) {\n            extensions[ext.level].unshift(ext.tokenizer);\n          } else {\n            extensions[ext.level] = [ext.tokenizer];\n          }\n          if (ext.start) { // Function to check for start of token\n            if (ext.level === 'block') {\n              if (extensions.startBlock) {\n                extensions.startBlock.push(ext.start);\n              } else {\n                extensions.startBlock = [ext.start];\n              }\n            } else if (ext.level === 'inline') {\n              if (extensions.startInline) {\n                extensions.startInline.push(ext.start);\n              } else {\n                extensions.startInline = [ext.start];\n              }\n            }\n          }\n        }\n        if (ext.childTokens) { // Child tokens to be visited by walkTokens\n          extensions.childTokens[ext.name] = ext.childTokens;\n        }\n      });\n    }\n\n    // ==-- Parse \"overwrite\" extensions --== //\n    if (pack.renderer) {\n      const renderer = marked.defaults.renderer || new Renderer();\n      for (const prop in pack.renderer) {\n        const prevRenderer = renderer[prop];\n        // Replace renderer with func to run extension, but fall back if false\n        renderer[prop] = (...args) => {\n          let ret = pack.renderer[prop].apply(renderer, args);\n          if (ret === false) {\n            ret = prevRenderer.apply(renderer, args);\n          }\n          return ret;\n        };\n      }\n      opts.renderer = renderer;\n    }\n    if (pack.tokenizer) {\n      const tokenizer = marked.defaults.tokenizer || new Tokenizer();\n      for (const prop in pack.tokenizer) {\n        const prevTokenizer = tokenizer[prop];\n        // Replace tokenizer with func to run extension, but fall back if false\n        tokenizer[prop] = (...args) => {\n          let ret = pack.tokenizer[prop].apply(tokenizer, args);\n          if (ret === false) {\n            ret = prevTokenizer.apply(tokenizer, args);\n          }\n          return ret;\n        };\n      }\n      opts.tokenizer = tokenizer;\n    }\n\n    // ==-- Parse WalkTokens extensions --== //\n    if (pack.walkTokens) {\n      const walkTokens = marked.defaults.walkTokens;\n      opts.walkTokens = function(token) {\n        let values = [];\n        values.push(pack.walkTokens.call(this, token));\n        if (walkTokens) {\n          values = values.concat(walkTokens.call(this, token));\n        }\n        return values;\n      };\n    }\n\n    if (hasExtensions) {\n      opts.extensions = extensions;\n    }\n\n    marked.setOptions(opts);\n  });\n};\n\n/**\n * Run callback for every token\n */\n\nmarked.walkTokens = function(tokens, callback) {\n  let values = [];\n  for (const token of tokens) {\n    values = values.concat(callback.call(marked, token));\n    switch (token.type) {\n      case 'table': {\n        for (const cell of token.header) {\n          values = values.concat(marked.walkTokens(cell.tokens, callback));\n        }\n        for (const row of token.rows) {\n          for (const cell of row) {\n            values = values.concat(marked.walkTokens(cell.tokens, callback));\n          }\n        }\n        break;\n      }\n      case 'list': {\n        values = values.concat(marked.walkTokens(token.items, callback));\n        break;\n      }\n      default: {\n        if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) { // Walk any extensions\n          marked.defaults.extensions.childTokens[token.type].forEach(function(childTokens) {\n            values = values.concat(marked.walkTokens(token[childTokens], callback));\n          });\n        } else if (token.tokens) {\n          values = values.concat(marked.walkTokens(token.tokens, callback));\n        }\n      }\n    }\n  }\n  return values;\n};\n\n/**\n * Parse Inline\n * @param {string} src\n */\nmarked.parseInline = function(src, opt) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked.parseInline(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked.parseInline(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  opt = merge({}, marked.defaults, opt || {});\n  checkSanitizeDeprecation(opt);\n\n  try {\n    const tokens = Lexer.lexInline(src, opt);\n    if (opt.walkTokens) {\n      marked.walkTokens(tokens, opt.walkTokens);\n    }\n    return Parser.parseInline(tokens, opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if (opt.silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n};\n\n/**\n * Expose\n */\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\nmarked.Tokenizer = Tokenizer;\nmarked.Slugger = Slugger;\nmarked.parse = marked;\n\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = Parser.parse;\nconst lexer = Lexer.lex;\n\nexport { Lexer, Parser, Renderer, Slugger, TextRenderer, Tokenizer, defaults, getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n", "import{getCurrentScope as e,onScopeDispose as t,getCurrentInstance as n,onMounted as l,nextTick as o,unref as a,ref as i,isRef as r,watch as s,readonly as c,shallowRef as u,h as m,defineComponent as d,onBeforeUnmount as v,resolveComponent as p,openBlock as g,createElementBlock as f,normalizeStyle as h,Fragment as y,renderList as w,createBlock as b,createCommentVNode as k,createElementVNode as C,computed as I,inject as $,reactive as j,onUnmounted as L,createVNode as S,toDisplayString as x,normalizeClass as E,withDirectives as O,vModelDynamic as R,vModelText as A,vShow as z,createTextVNode as M,provide as P}from\"vue\";import U from\"autosize\";import{marked as T}from\"marked\";var H;const N=\"undefined\"!=typeof window,B=()=>{};function V(e){return\"function\"==typeof e?e():a(e)}function _(e,t){return function(...n){e((()=>t.apply(this,n)),{fn:t,thisArg:this,args:n})}}N&&(null==(H=null==window?void 0:window.navigator)?void 0:H.userAgent)&&/iP(ad|hone|od)/.test(window.navigator.userAgent);const F=e=>e();function D(n){return!!e()&&(t(n),!0)}function W(e,t=200,n={}){return _(function(e,t={}){let n,l;return o=>{const a=V(e),i=V(t.maxWait);if(n&&clearTimeout(n),a<=0||void 0!==i&&i<=0)return l&&(clearTimeout(l),l=null),o();i&&!l&&(l=setTimeout((()=>{n&&clearTimeout(n),l=null,o()}),i)),n=setTimeout((()=>{l&&clearTimeout(l),l=null,o()}),a)}}(t,n),e)}var G=Object.getOwnPropertySymbols,q=Object.prototype.hasOwnProperty,J=Object.prototype.propertyIsEnumerable;function K(e,t,n={}){const l=n,{eventFilter:o=F}=l,a=((e,t)=>{var n={};for(var l in e)q.call(e,l)&&t.indexOf(l)<0&&(n[l]=e[l]);if(null!=e&&G)for(var l of G(e))t.indexOf(l)<0&&J.call(e,l)&&(n[l]=e[l]);return n})(l,[\"eventFilter\"]);return s(e,_(o,t),a)}var Q=Object.defineProperty,Z=Object.defineProperties,Y=Object.getOwnPropertyDescriptors,X=Object.getOwnPropertySymbols,ee=Object.prototype.hasOwnProperty,te=Object.prototype.propertyIsEnumerable,ne=(e,t,n)=>t in e?Q(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;function le(e,t,n={}){const l=n,{eventFilter:o}=l,a=((e,t)=>{var n={};for(var l in e)ee.call(e,l)&&t.indexOf(l)<0&&(n[l]=e[l]);if(null!=e&&X)for(var l of X(e))t.indexOf(l)<0&&te.call(e,l)&&(n[l]=e[l]);return n})(l,[\"eventFilter\"]),{eventFilter:r,pause:s,resume:c,isActive:u}=function(e=F){const t=i(!0);return{isActive:t,pause:function(){t.value=!1},resume:function(){t.value=!0},eventFilter:(...n)=>{t.value&&e(...n)}}}(o),m=K(e,t,(d=((e,t)=>{for(var n in t||(t={}))ee.call(t,n)&&ne(e,n,t[n]);if(X)for(var n of X(t))te.call(t,n)&&ne(e,n,t[n]);return e})({},a),Z(d,Y({eventFilter:r}))));var d;return{stop:m,pause:s,resume:c,isActive:u}}const oe=N?window:void 0,ae=N?window.document:void 0;function ie(...e){let t,n,l,o;if(\"string\"==typeof e[0]?([n,l,o]=e,t=oe):[t,n,l,o]=e,!t)return B;let a=B;const i=s((()=>function(e){var t;const n=V(e);return null!=(t=null==n?void 0:n.$el)?t:n}(t)),(e=>{a(),e&&(e.addEventListener(n,l,o),a=()=>{e.removeEventListener(n,l,o),a=B})}),{immediate:!0,flush:\"post\"}),r=()=>{i(),a()};return D(r),r}N&&window.navigator,N&&window.location;const re=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{},se=\"__vueuse_ssr_handlers__\";re[se]=re[se]||{};const ce=re[se];var ue=Object.defineProperty,me=Object.getOwnPropertySymbols,de=Object.prototype.hasOwnProperty,ve=Object.prototype.propertyIsEnumerable,pe=(e,t,n)=>t in e?ue(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,ge=(e,t)=>{for(var n in t||(t={}))de.call(t,n)&&pe(e,n,t[n]);if(me)for(var n of me(t))ve.call(t,n)&&pe(e,n,t[n]);return e};const fe={boolean:{read:e=>\"true\"===e,write:e=>String(e)},object:{read:e=>JSON.parse(e),write:e=>JSON.stringify(e)},number:{read:e=>Number.parseFloat(e),write:e=>String(e)},any:{read:e=>e,write:e=>String(e)},string:{read:e=>e,write:e=>String(e)},map:{read:e=>new Map(JSON.parse(e)),write:e=>JSON.stringify(Array.from(e.entries()))},set:{read:e=>new Set(JSON.parse(e)),write:e=>JSON.stringify(Array.from(e))},date:{read:e=>new Date(e),write:e=>e.toISOString()}};function he(e,t,n,l={}){var o;const{flush:a=\"pre\",deep:r=!0,listenToStorageChanges:s=!0,writeDefaults:c=!0,mergeDefaults:m=!1,shallow:d,window:v=oe,eventFilter:p,onError:g=(e=>{console.error(e)})}=l,f=(d?u:i)(t);if(!n)try{n=function(e,t){return ce[e]||t}(\"getDefaultStorage\",(()=>{var e;return null==(e=oe)?void 0:e.localStorage}))()}catch(e){g(e)}if(!n)return f;const h=V(t),y=function(e){return null==e?\"any\":e instanceof Set?\"set\":e instanceof Map?\"map\":e instanceof Date?\"date\":\"boolean\"==typeof e?\"boolean\":\"string\"==typeof e?\"string\":\"object\"==typeof e||Array.isArray(e)?\"object\":Number.isNaN(e)?\"any\":\"number\"}(h),w=null!=(o=l.serializer)?o:fe[y],{pause:b,resume:k}=le(f,(()=>function(t){try{null==t?n.removeItem(e):n.setItem(e,w.write(t))}catch(e){g(e)}}(f.value)),{flush:a,deep:r,eventFilter:p});return v&&s&&ie(v,\"storage\",C),C(),f;function C(t){t&&t.key!==e||(f.value=function(t){if(!t||t.key===e){b();try{const l=t?t.newValue:n.getItem(e);if(null==l)return c&&null!==h&&n.setItem(e,w.write(h)),h;if(!t&&m){const e=w.read(l);return\"function\"==typeof m?m(e,h):\"object\"!==y||Array.isArray(e)?e:ge(ge({},h),e)}return\"string\"!=typeof l?l:w.read(l)}catch(e){g(e)}finally{k()}}}(t))}}var ye,we,be=Object.defineProperty,ke=Object.getOwnPropertySymbols,Ce=Object.prototype.hasOwnProperty,Ie=Object.prototype.propertyIsEnumerable,$e=(e,t,n)=>t in e?be(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;function je(e={}){const{controls:t=!1,interval:n=\"requestAnimationFrame\"}=e,l=i(new Date),o=()=>l.value=new Date,c=\"requestAnimationFrame\"===n?function(e,t={}){const{immediate:n=!0,window:l=oe}=t,o=i(!1);let a=null;function r(){o.value&&l&&(e(),a=l.requestAnimationFrame(r))}function s(){!o.value&&l&&(o.value=!0,r())}function c(){o.value=!1,null!=a&&l&&(l.cancelAnimationFrame(a),a=null)}return n&&s(),D(c),{isActive:o,pause:c,resume:s}}(o,{immediate:!0}):function(e,t=1e3,n={}){const{immediate:l=!0,immediateCallback:o=!1}=n;let c=null;const u=i(!1);function m(){c&&(clearInterval(c),c=null)}function d(){u.value=!1,m()}function v(){a(t)<=0||(u.value=!0,o&&e(),m(),c=setInterval(e,V(t)))}l&&N&&v(),r(t)&&D(s(t,(()=>{u.value&&N&&v()})));return D(d),{isActive:u,pause:d,resume:v}}(o,n,{immediate:!0});return t?((e,t)=>{for(var n in t||(t={}))Ce.call(t,n)&&$e(e,n,t[n]);if(ke)for(var n of ke(t))Ie.call(t,n)&&$e(e,n,t[n]);return e})({now:l},c):l}(we=ye||(ye={})).UP=\"UP\",we.RIGHT=\"RIGHT\",we.DOWN=\"DOWN\",we.LEFT=\"LEFT\",we.NONE=\"NONE\";let Le=0;function Se(e,t={}){const a=i(!1),{document:r=ae,immediate:u=!0,manual:m=!1,id:d=\"vueuse_styletag_\"+ ++Le}=t,v=i(e);let p=()=>{};const g=()=>{if(!r)return;const e=r.getElementById(d)||r.createElement(\"style\");e.type=\"text/css\",e.id=d,t.media&&(e.media=t.media),r.head.appendChild(e),a.value||(p=s(v,(t=>{e.innerText=t}),{immediate:!0}),a.value=!0)},f=()=>{r&&a.value&&(p(),r.head.removeChild(r.getElementById(d)),a.value=!1)};return u&&!m&&function(e,t=!0){n()?l(e):t?e():o(e)}(g),m||D(f),{id:d,css:v,unload:f,load:g,isLoaded:c(a)}}var xe=Object.defineProperty,Ee=Object.getOwnPropertySymbols,Oe=Object.prototype.hasOwnProperty,Re=Object.prototype.propertyIsEnumerable,Ae=(e,t,n)=>t in e?xe(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n;((e,t)=>{for(var n in t||(t={}))Oe.call(t,n)&&Ae(e,n,t[n]);if(Ee)for(var n of Ee(t))Re.call(t,n)&&Ae(e,n,t[n])})({linear:function(e){return e}},{easeInSine:[.12,0,.39,0],easeOutSine:[.61,1,.88,1],easeInOutSine:[.37,0,.63,1],easeInQuad:[.11,0,.5,0],easeOutQuad:[.5,1,.89,1],easeInOutQuad:[.45,0,.55,1],easeInCubic:[.32,0,.67,0],easeOutCubic:[.33,1,.68,1],easeInOutCubic:[.65,0,.35,1],easeInQuart:[.5,0,.75,0],easeOutQuart:[.25,1,.5,1],easeInOutQuart:[.76,0,.24,1],easeInQuint:[.64,0,.78,0],easeOutQuint:[.22,1,.36,1],easeInOutQuint:[.83,0,.17,1],easeInExpo:[.7,0,.84,0],easeOutExpo:[.16,1,.3,1],easeInOutExpo:[.87,0,.13,1],easeInCirc:[.55,0,1,.45],easeOutCirc:[0,.55,.45,1],easeInOutCirc:[.85,0,.15,1],easeInBack:[.36,0,.66,-.56],easeOutBack:[.34,1.56,.64,1],easeInOutBack:[.68,-.6,.32,1.6]});const ze=({size:e})=>m(\"svg\",{width:e,height:e,viewBox:\"0 0 100 100\",preserveAspectRatio:\"xMidYMid\"},m(\"circle\",{cx:50,cy:50,fill:\"none\",stroke:\"currentColor\",strokeWidth:\"4\",r:\"40\",\"stroke-dasharray\":\"85 30\"},m(\"animateTransform\",{attributeName:\"transform\",type:\"rotate\",repeatCount:\"indefinite\",dur:\"1s\",values:\"0 50 50;360 50 50\",keyTimes:\"0;1\"})));var Me=d({name:\"ImageWall\",components:{LoadingIcon:ze},props:{items:{type:Array,default:()=>[]},columnWidth:{type:Number,default:300},gap:{type:Number,default:0}},emits:[\"insert\"],setup(e){let t=null;const n=i(null),a=i({}),r=i([]),c=()=>{const t=Math.floor((n.value.getBoundingClientRect().width+e.gap)/(e.columnWidth+e.gap));return t>0?t:1},u=async t=>{if(t>=e.items.length)return;await o();const l=Array.from(n.value?.children||[]).reduce(((e,t)=>t.getBoundingClientRect().height<e.getBoundingClientRect().height?t:e));r.value[Number(l.dataset.index)].push(t),await u(t+1)},m=async(e=!1)=>{if(r.value.length===c()&&!e)return;var t;r.value=(t=c(),new Array(t).fill(null).map((()=>[])));const n=window.scrollY;await u(0),window.scrollTo({top:n})};return s((()=>[e.items]),(()=>{a.value={},m(!0)})),s((()=>[e.columnWidth,e.gap]),(()=>m())),l((()=>{m(!0),t=new ResizeObserver((()=>m())),t.observe(n.value)})),v((()=>t.unobserve(n.value))),{columns:r,state:a,wall:n}}}),Pe=(e,t)=>{const n=e.__vccOpts||e;for(const[e,l]of t)n[e]=l;return n};const Ue=[\"data-index\"],Te=[\"src\",\"title\",\"onLoad\",\"onClick\"];var He=Pe(Me,[[\"render\",function(e,t,n,l,o,a){const i=p(\"LoadingIcon\");return g(),f(\"div\",{ref:\"wall\",class:\"wl-gallery\",style:h({gap:`${e.gap}px`})},[(g(!0),f(y,null,w(e.columns,((t,n)=>(g(),f(\"div\",{key:n,class:\"wl-gallery-column\",\"data-index\":n,style:h({gap:`${e.gap}px`})},[(g(!0),f(y,null,w(t,(t=>(g(),f(y,{key:t},[e.state[e.items[t].src]?k(\"v-if\",!0):(g(),b(i,{key:0,size:36,style:{margin:\"20px auto\"}})),C(\"img\",{class:\"wl-gallery-item\",src:e.items[t].src,title:e.items[t].title,loading:\"lazy\",onLoad:n=>e.state[e.items[t].src]=!0,onClick:n=>e.$emit(\"insert\",`![](${e.items[t].src})`)},null,40,Te)],64)))),128))],12,Ue)))),128))],4)}],[\"__file\",\"ImageWall.vue\"]]);const Ne=[\"nick\",\"mail\",\"link\"],Be=e=>e.filter((e=>Ne.includes(e))),Ve=e=>new Promise(((t,n)=>{if(e.size>128e3)return n(new Error(\"File too large! File size limit 128KB\"));const l=new FileReader;l.readAsDataURL(e),l.onload=()=>t(l.result?.toString()||\"\"),l.onerror=n})),_e=e=>!0===e?'<p class=\"wl-tex\">Tex is not available in preview</p>':'<span class=\"wl-tex\">Tex is not available in preview</span>',Fe=()=>{const e={next:\"\"},t=({keyword:e,pos:t})=>{const n=new URLSearchParams(\"media_filter=minimal\");return n.set(\"key\",\"PAY5JLFIH6V6\"),n.set(\"limit\",\"20\"),n.set(\"pos\",t||\"\"),n.set(\"q\",e),fetch(`https://g.tenor.com/v1/search?${n.toString()}`,{headers:{\"Content-Type\":\"application/json\"}}).then((e=>e.json())).catch((()=>({next:t||\"\",results:[]})))};return{search:(n=\"\")=>t({keyword:n}).then((t=>(e.next=t.next,t.results.map((e=>({title:e.title,src:e.media[0].tinygif.url})))))),more:n=>t({keyword:n,pos:e.next}).then((t=>(e.next=t.next,t.results.map((e=>({title:e.title,src:e.media[0].tinygif.url}))))))}},De=new RegExp(`(${/[\\u4E00-\\u9FFF\\u3400-\\u4dbf\\uf900-\\ufaff\\u3040-\\u309f\\uac00-\\ud7af\\u0400-\\u04FF]+|\\w+/.source}|${/</.source})|((?:${/(?:^|\\s)\\/\\/(.+?)$/gm.source})|(?:${/\\/\\*([\\S\\s]*?)\\*\\//gm.source}))`,\"gmi\"),We=[\"23AC69\",\"91C132\",\"F19726\",\"E8552D\",\"1AAB8E\",\"E1147F\",\"2980C1\",\"1BA1E6\",\"9FA0A0\",\"F19726\",\"E30B20\",\"E30B20\",\"A3338B\"],Ge={},qe=e=>{let t=0;return e.replace(De,((e,n,l)=>{if(l)return`<span style=\"color: slategray\">${l}</span>`;if(\"<\"===n)return\"&lt;\";let o;Ge[n]?o=Ge[n]:(o=We[t],Ge[n]=o);const a=`<span style=\"color: #${o}\">${n}</span>`;return t=++t%We.length,a}))},Je=[\"nick\",\"nickError\",\"mail\",\"mailError\",\"link\",\"optional\",\"placeholder\",\"sofa\",\"submit\",\"like\",\"cancelLike\",\"reply\",\"cancelReply\",\"comment\",\"refresh\",\"more\",\"preview\",\"emoji\",\"uploadImage\",\"seconds\",\"minutes\",\"hours\",\"days\",\"now\",\"uploading\",\"login\",\"logout\",\"admin\",\"sticky\",\"word\",\"wordHint\",\"anonymous\",\"level0\",\"level1\",\"level2\",\"level3\",\"level4\",\"level5\",\"gif\",\"gifSearchPlaceholder\",\"profile\",\"approved\",\"waiting\",\"spam\",\"unsticky\",\"oldest\",\"latest\",\"hottest\"],Ke=e=>Object.fromEntries(e.map(((e,t)=>[Je[t],e])));var Qe=Ke([\"NickName\",\"NickName cannot be less than 3 bytes.\",\"E-Mail\",\"Please confirm your email address.\",\"Website\",\"Optional\",\"Comment here...\",\"No comment yet.\",\"Submit\",\"Like\",\"Cancel like\",\"Reply\",\"Cancel reply\",\"Comments\",\"Refresh\",\"Load More...\",\"Preview\",\"Emoji\",\"Upload Image\",\"seconds ago\",\"minutes ago\",\"hours ago\",\"days ago\",\"just now\",\"Uploading\",\"Login\",\"logout\",\"Admin\",\"Sticky\",\"Words\",\"Please input comments between $0 and $1 words!\\n Current word number: $2\",\"Anonymous\",\"Dwarves\",\"Hobbits\",\"Ents\",\"Wizards\",\"Elves\",\"Maiar\",\"GIF\",\"Search GIF\",\"Profile\",\"Approved\",\"Waiting\",\"Spam\",\"Unsticky\",\"Oldest\",\"Latest\",\"Hottest\"]),Ze=Ke([\"\u30CB\u30C3\u30AF\u30CD\u30FC\u30E0\",\"3\u30D0\u30A4\u30C8\u4EE5\u4E0A\u306E\u30CB\u30C3\u30AF\u30CD\u30FC\u30E0\u3092\u3054\u5165\u529B\u304F\u3060\u3055\u3044.\",\"\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\",\"\u30E1\u30FC\u30EB\u30A2\u30C9\u30EC\u30B9\u3092\u3054\u78BA\u8A8D\u304F\u3060\u3055\u3044.\",\"\u30B5\u30A4\u30C8\",\"\u30AA\u30D7\u30B7\u30E7\u30F3\",\"\u3053\u3053\u306B\u30B3\u30E1\u30F3\u30C8\",\"\u30B3\u30E1\u30F3\u30C8\u3057\u307E\u3057\u3087\u3046~\",\"\u63D0\u51FA\u3059\u308B\",\"Like\",\"Cancel like\",\"\u8FD4\u4FE1\u3059\u308B\",\"\u30AD\u30E3\u30F3\u30BB\u30EB\",\"\u30B3\u30E1\u30F3\u30C8\",\"\u66F4\u65B0\",\"\u3055\u3089\u306B\u8AAD\u307F\u8FBC\u3080\",\"\u30D7\u30EC\u30D3\u30E5\u30FC\",\"\u7D75\u6587\u5B57\",\"\u753B\u50CF\u3092\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\",\"\u79D2\u524D\",\"\u5206\u524D\",\"\u6642\u9593\u524D\",\"\u65E5\u524D\",\"\u305F\u3063\u3060\u4ECA\",\"\u30A2\u30C3\u30D7\u30ED\u30FC\u30C9\",\"\u30ED\u30B0\u30A4\u30F3\u3059\u308B\",\"\u30ED\u30B0\u30A2\u30A6\u30C8\",\"\u7BA1\u7406\u8005\",\"\u30C8\u30C3\u30D7\u306B\u7F6E\u304F\",\"\u30EF\u30FC\u30C9\",\"\u30B3\u30E1\u30F3\u30C8\u306F $0 \u304B\u3089 $1 \u30EF\u30FC\u30C9\u306E\u9593\u3067\u306A\u3051\u308C\u3070\u306A\u308A\u307E\u305B\u3093!\\n \u73FE\u5728\u306E\u5358\u8A9E\u756A\u53F7: $2\",\"\u533F\u540D\",\"\u3046\u3048\u306B\u3093\",\"\u306A\u304B\u306B\u3093\",\"\u3057\u3082\u304A\u3057\",\"\u7279\u306B\u3057\u3082\u304A\u3057\",\"\u304B\u3052\",\"\u306A\u306C\u3057\",\"GIF\",\"\u63A2\u3059 GIF\",\"\u500B\u4EBA\u60C5\u5831\",\"\u627F\u8A8D\u6E08\u307F\",\"\u5F85\u3063\u3066\u3044\u308B\",\"\u30B9\u30D1\u30E0\",\"\u3079\u305F\u3064\u304B\u306A\u3044\",\"\u9006\u9806\",\"\u6B63\u9806\",\"\u4EBA\u6C17\u9806\"]),Ye=Ke([\"\u6635\u79F0\",\"\u6635\u79F0\u4E0D\u80FD\u5C11\u4E8E3\u4E2A\u5B57\u7B26\",\"\u90AE\u7BB1\",\"\u8BF7\u586B\u5199\u6B63\u786E\u7684\u90AE\u4EF6\u5730\u5740\",\"\u7F51\u5740\",\"\u53EF\u9009\",\"\u6B22\u8FCE\u8BC4\u8BBA\",\"\u6765\u53D1\u8BC4\u8BBA\u5427~\",\"\u63D0\u4EA4\",\"\u559C\u6B22\",\"\u53D6\u6D88\u559C\u6B22\",\"\u56DE\u590D\",\"\u53D6\u6D88\u56DE\u590D\",\"\u8BC4\u8BBA\",\"\u5237\u65B0\",\"\u52A0\u8F7D\u66F4\u591A...\",\"\u9884\u89C8\",\"\u8868\u60C5\",\"\u4E0A\u4F20\u56FE\u7247\",\"\u79D2\u524D\",\"\u5206\u949F\u524D\",\"\u5C0F\u65F6\u524D\",\"\u5929\u524D\",\"\u521A\u521A\",\"\u6B63\u5728\u4E0A\u4F20\",\"\u767B\u5F55\",\"\u9000\u51FA\",\"\u535A\u4E3B\",\"\u7F6E\u9876\",\"\u5B57\",\"\u8BC4\u8BBA\u5B57\u6570\u5E94\u5728 $0 \u5230 $1 \u5B57\u4E4B\u95F4\uFF01\\n\u5F53\u524D\u5B57\u6570\uFF1A$2\",\"\u533F\u540D\",\"\u6F5C\u6C34\",\"\u5192\u6CE1\",\"\u5410\u69FD\",\"\u6D3B\u8DC3\",\"\u8BDD\u75E8\",\"\u4F20\u8BF4\",\"\u8868\u60C5\u5305\",\"\u641C\u7D22\u8868\u60C5\u5305\",\"\u4E2A\u4EBA\u8D44\u6599\",\"\u901A\u8FC7\",\"\u5F85\u5BA1\u6838\",\"\u5783\u573E\",\"\u53D6\u6D88\u7F6E\u9876\",\"\u6309\u5012\u5E8F\",\"\u6309\u6B63\u5E8F\",\"\u6309\u70ED\u5EA6\"]),Xe=Ke([\"\u66B1\u7A31\",\"\u66B1\u7A31\u4E0D\u80FD\u5C11\u65BC3\u500B\u5B57\u5143\",\"\u90F5\u7BB1\",\"\u8ACB\u586B\u5BEB\u6B63\u78BA\u7684\u90F5\u4EF6\u5730\u5740\",\"\u7DB2\u5740\",\"\u53EF\u9078\",\"\u6B61\u8FCE\u8A55\u8AD6\",\"\u4F86\u767C\u8A55\u8AD6\u5427~\",\"\u63D0\u4EA4\",\"\u559C\u6B61\",\"\u53D6\u6D88\u559C\u6B61\",\"\u56DE\u8986\",\"\u53D6\u6D88\u56DE\u8986\",\"\u8A55\u8AD6\",\"\u5237\u65B0\",\"\u8F09\u5165\u66F4\u591A...\",\"\u9810\u89BD\",\"\u8868\u60C5\",\"\u4E0A\u50B3\u5716\u7247\",\"\u79D2\u524D\",\"\u5206\u9418\u524D\",\"\u5C0F\u6642\u524D\",\"\u5929\u524D\",\"\u525B\u525B\",\"\u6B63\u5728\u4E0A\u50B3\",\"\u767B\u9304\",\"\u9000\u51FA\",\"\u535A\u4E3B\",\"\u7F6E\u9802\",\"\u5B57\",\"\u8A55\u8AD6\u5B57\u6578\u61C9\u5728 $0 \u5230 $1 \u5B57\u4E4B\u9593\uFF01\\n\u7576\u524D\u5B57\u6578\uFF1A$2\",\"\u533F\u540D\",\"\u6F5B\u6C34\",\"\u5192\u6CE1\",\"\u5410\u69FD\",\"\u6D3B\u8E8D\",\"\u8A71\u7646\",\"\u50B3\u8AAA\",\"\u8868\u60C5\u5305\",\"\u641C\u7D22\u8868\u60C5\u5305\",\"\u500B\u4EBA\u8CC7\u6599\",\"\u901A\u904E\",\"\u5F85\u5BE9\u6838\",\"\u5783\u573E\",\"\u53D6\u6D88\u7F6E\u9802\",\"\u6309\u5012\u5E8F\",\"\u6309\u6B63\u5E8F\",\"\u6309\u71B1\u5EA6\"]),et=Ke([\"Apelido\",\"Apelido n\u00E3o pode ser menor que 3 bytes.\",\"E-Mail\",\"Por favor, confirme seu endere\u00E7o de e-mail.\",\"Website\",\"Opcional\",\"Comente aqui...\",\"Nenhum coment\u00E1rio, ainda.\",\"Enviar\",\"Like\",\"Cancel like\",\"Responder\",\"Cancelar resposta\",\"Coment\u00E1rios\",\"Refrescar\",\"Carregar Mais...\",\"Visualizar\",\"Emoji\",\"Enviar Imagem\",\"segundos atr\u00E1s\",\"minutos atr\u00E1s\",\"horas atr\u00E1s\",\"dias atr\u00E1s\",\"agora mesmo\",\"Enviando\",\"Entrar\",\"Sair\",\"Admin\",\"Sticky\",\"Palavras\",\"Favor enviar coment\u00E1rio com $0 a $1 palavras!\\n N\u00FAmero de palavras atuais: $2\",\"An\u00F4nimo\",\"Dwarves\",\"Hobbits\",\"Ents\",\"Wizards\",\"Elves\",\"Maiar\",\"GIF\",\"Pesquisar GIF\",\"informa\u00E7\u00E3o pessoal\",\"Aprovado\",\"Espera\",\"Spam\",\"Unsticky\",\"Mais velho\",\"Mais recentes\",\"Mais quente\"]),tt=Ke([\"\u041F\u0441\u0435\u0432\u0434\u043E\u043D\u0438\u043C\",\"\u041D\u0438\u043A\u043D\u0435\u0439\u043C \u043D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u043C\u0435\u043D\u044C\u0448\u0435 3 \u0431\u0430\u0439\u0442.\",\"\u042D\u043B. \u0430\u0434\u0440\u0435\u0441\",\"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u043F\u043E\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u0430\u0434\u0440\u0435\u0441 \u0432\u0430\u0448\u0435\u0439 \u044D\u043B\u0435\u043A\u0442\u0440\u043E\u043D\u043D\u043E\u0439 \u043F\u043E\u0447\u0442\u044B.\",\"\u0412\u0435\u0431-\u0441\u0430\u0439\u0442\",\"\u041D\u0435\u043E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\u044B\u0439\",\"\u041A\u043E\u043C\u043C\u0435\u043D\u0442\u0430\u0440\u0438\u0439 \u0437\u0434\u0435\u0441\u044C...\",\"\u041F\u043E\u043A\u0430 \u043D\u0435\u0442 \u043A\u043E\u043C\u043C\u0435\u043D\u0442\u0430\u0440\u0438\u0435\u0432.\",\"\u041E\u0442\u043F\u0440\u0430\u0432\u0438\u0442\u044C\",\"Like\",\"Cancel like\",\"\u041E\u0442\u0432\u0435\u0447\u0430\u0442\u044C\",\"\u041E\u0442\u043C\u0435\u043D\u0438\u0442\u044C \u043E\u0442\u0432\u0435\u0442\",\"\u041A\u043E\u043C\u043C\u0435\u043D\u0442\u0430\u0440\u0438\u0438\",\"\u041E\u0431\u043D\u043E\u0432\u0438\u0442\u044C\",\"\u0417\u0430\u0433\u0440\u0443\u0437\u0438 \u0431\u043E\u043B\u044C\u0448\u0435...\",\"\u041F\u0440\u0435\u0432\u044C\u044E\",\"\u044D\u043C\u043E\u0434\u0437\u0438\",\"\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044C \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\",\"\u0441\u0435\u043A\u0443\u043D\u0434 \u043D\u0430\u0437\u0430\u0434\",\"\u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u043E \u043C\u0438\u043D\u0443\u0442 \u043D\u0430\u0437\u0430\u0434\",\"\u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u043E \u0447\u0430\u0441\u043E\u0432 \u043D\u0430\u0437\u0430\u0434\",\"\u0434\u043D\u0435\u0439 \u043D\u0430\u0437\u0430\u0434\",\"\u043F\u0440\u044F\u043C\u043E \u0441\u0435\u0439\u0447\u0430\u0441\",\"\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430\",\"\u0410\u0432\u0442\u043E\u0440\u0438\u0437\u043E\u0432\u0430\u0442\u044C\u0441\u044F\",\"\u0412\u044B\u0445\u043E\u0434 \u0438\u0437 \u0441\u0438\u0441\u0442\u0435\u043C\u044B\",\"\u0410\u0434\u043C\u0438\u043D\",\"\u041B\u0438\u043F\u043A\u0438\u0439\",\"\u0421\u043B\u043E\u0432\u0430\",\"\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u043A\u043E\u043C\u043C\u0435\u043D\u0442\u0430\u0440\u0438\u0438 \u043E\u0442 $0 \u0434\u043E $1 \u0441\u043B\u043E\u0432!\\n\u041D\u043E\u043C\u0435\u0440 \u0442\u0435\u043A\u0443\u0449\u0435\u0433\u043E \u0441\u043B\u043E\u0432\u0430: $2\",\"\u0410\u043D\u043E\u043D\u0438\u043C\u043D\u044B\u0439\",\"Dwarves\",\"Hobbits\",\"Ents\",\"Wizards\",\"Elves\",\"Maiar\",\"GIF\",\"\u041F\u043E\u0438\u0441\u043A GIF\",\"\u041F\u0435\u0440\u0441\u043E\u043D\u0430\u043B\u044C\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435\",\"\u041E\u0434\u043E\u0431\u0440\u0435\u043D\u043D\u044B\u0439\",\"\u041E\u0436\u0438\u0434\u0430\u044E\u0449\u0438\u0439\",\"\u0421\u043F\u0430\u043C\",\"\u041D\u0435\u043B\u0438\u043F\u043A\u0438\u0439\",\"\u0441\u0430\u043C\u044B\u0439 \u0441\u0442\u0430\u0440\u044B\u0439\",\"\u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0438\u0439\",\"\u0441\u0430\u043C\u044B\u0439 \u0433\u043E\u0440\u044F\u0447\u0438\u0439\"]);const nt={zh:Ye,\"zh-cn\":Ye,\"zh-CN\":Ye,\"zh-tw\":Xe,\"zh-TW\":Xe,en:Qe,\"en-US\":Qe,\"en-us\":Qe,jp:Ze,\"jp-jp\":Ze,\"jp-JP\":Ze,\"pt-br\":et,\"pt-BR\":et,ru:tt,\"ru-ru\":tt,\"ru-RU\":tt},lt=e=>{try{e=decodeURI(e)}catch(e){}return e},ot=(e=\"\")=>e.replace(/\\/$/u,\"\"),at=e=>/^(https?:)?\\/\\//.test(e),it=e=>{const t=ot(e);return at(t)?t:`https://${t}`},rt=e=>Array.isArray(e)?e:!!e&&[0,e],st=(e,t)=>\"function\"==typeof e?e:!1!==e&&t,ct=\"{--waline-white:#000;--waline-light-grey:#666;--waline-dark-grey:#999;--waline-color:#888;--waline-bgcolor:#1e1e1e;--waline-bgcolor-light:#272727;--waline-bgcolor-hover: #444;--waline-border-color:#333;--waline-disable-bgcolor:#444;--waline-disable-color:#272727;--waline-bq-color:#272727;--waline-info-bgcolor:#272727;--waline-info-color:#666}\",ut=(e,t)=>{let n=e.toString();for(;n.length<t;)n=\"0\"+n;return n},mt=(e,t,n)=>{if(!e)return\"\";const l=\"string\"==typeof e?new Date(-1!==e.indexOf(\" \")?e.replace(/-/g,\"/\"):e):e,o=t.getTime()-l.getTime(),a=Math.floor(o/864e5);if(0===a){const e=o%864e5,t=Math.floor(e/36e5);if(0===t){const t=e%36e5,l=Math.floor(t/6e4);if(0===l){const e=t%6e4;return`${Math.round(e/1e3)} ${n.seconds}`}return`${l} ${n.minutes}`}return`${t} ${n.hours}`}return a<0?n.now:a<8?`${a} ${n.days}`:(e=>{const t=ut(e.getDate(),2),n=ut(e.getMonth()+1,2);return`${ut(e.getFullYear(),2)}-${n}-${t}`})(l)},dt=e=>{const t=he(\"WALINE_EMOJI\",{}),n=Boolean(/@[0-9]+\\.[0-9]+\\.[0-9]+/.test(e));if(n){const n=t.value[e];if(n)return Promise.resolve(n)}return fetch(`${e}/info.json`).then((e=>e.json())).then((l=>{const o={folder:e,...l};return n&&(t.value[e]=o),o}))},vt=(e,t=\"\",n=\"\",l=\"\")=>`${t?`${t}/`:\"\"}${n}${e}${l?`.${l}`:\"\"}`,pt={\"Content-Type\":\"application/json\"},gt=({serverURL:e,lang:t,path:n,page:l,pageSize:o,sortBy:a,signal:i,token:r})=>{const s={};return r&&(s.Authorization=`Bearer ${r}`),fetch(`${e}/comment?path=${encodeURIComponent(n)}&pageSize=${o}&page=${l}&lang=${t}&sortBy=${a}`,{signal:i,headers:s}).then((e=>e.json())).then((e=>((e,t=\"\")=>{if(\"object\"==typeof e&&e.errno)throw new TypeError(`Fetch ${t} failed with ${e.errno}: ${e.errmsg}`);return e})(e,\"comment list\")))},ft=({serverURL:e,lang:t,token:n,objectId:l,...o})=>fetch(`${e}/comment/${l}?lang=${t}`,{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",Authorization:`Bearer ${n}`},body:JSON.stringify(o)}).then((e=>e.json())),ht=e=>e.type.includes(\"image\"),yt=e=>{const t=Array.from(e).find(ht);return t?t.getAsFile():null},wt=/\\$.*?\\$/,bt=/^\\$(.*?)\\$/,kt=/^(?:\\s{0,3})\\$\\$((?:[^\\n]|\\n[^\\n])+?)\\n{0,1}\\$\\$/,Ct=(e=\"\",t={})=>e.replace(/:(.+?):/g,((e,n)=>t[n]?`<img class=\"wl-emoji\" src=\"${t[n]}\" alt=\"${n}\">`:e)),It=(e,{emojiMap:t,highlighter:n,texRenderer:l})=>{if(T.setOptions({highlight:n||void 0,breaks:!0,smartLists:!0,smartypants:!0}),l){const e=(e=>[{name:\"blockMath\",level:\"block\",tokenizer(t){const n=kt.exec(t);if(null!==n)return{type:\"html\",raw:n[0],text:e(!0,n[1])}}},{name:\"inlineMath\",level:\"inline\",start(e){const t=e.search(wt);return-1!==t?t:e.length},tokenizer(t){const n=bt.exec(t);if(null!==n)return{type:\"html\",raw:n[0],text:e(!1,n[1])}}}])(l);T.use({extensions:e})}return T.parse(Ct(e,t))};let $t=null;const jt=()=>$t||($t=he(\"WALINE_USER\",{}));let Lt=null;const St=()=>Lt||(Lt=he(\"WALINE_LIKE\",[]));var xt=d({name:\"CommentBox\",components:{CloseIcon:({size:e})=>m(\"svg\",{class:\"wl-close-icon\",viewBox:\"0 0 1024 1024\",width:e,height:e},[m(\"path\",{d:\"M697.173 85.333h-369.92c-144.64 0-241.92 101.547-241.92 252.587v348.587c0 150.613 97.28 252.16 241.92 252.16h369.92c144.64 0 241.494-101.547 241.494-252.16V337.92c0-151.04-96.854-252.587-241.494-252.587z\",fill:\"currentColor\"}),m(\"path\",{d:\"m640.683 587.52-75.947-75.861 75.904-75.862a37.29 37.29 0 0 0 0-52.778 37.205 37.205 0 0 0-52.779 0l-75.946 75.818-75.862-75.946a37.419 37.419 0 0 0-52.821 0 37.419 37.419 0 0 0 0 52.821l75.947 75.947-75.776 75.733a37.29 37.29 0 1 0 52.778 52.821l75.776-75.776 75.947 75.947a37.376 37.376 0 0 0 52.779-52.821z\",fill:\"#888\"})]),EmojiIcon:()=>m(\"svg\",{viewBox:\"0 0 1024 1024\",width:\"24\",height:\"24\"},m(\"path\",{d:\"M563.2 463.3 677 540c1.7 1.2 3.7 1.8 5.8 1.8.7 0 1.4-.1 2-.2 2.7-.5 5.1-2.1 6.6-4.4l25.3-37.8c1.5-2.3 2.1-5.1 1.6-7.8s-2.1-5.1-4.4-6.6l-73.6-49.1 73.6-49.1c2.3-1.5 3.9-3.9 4.4-6.6.5-2.7 0-5.5-1.6-7.8l-25.3-37.8a10.1 10.1 0 0 0-6.6-4.4c-.7-.1-1.3-.2-2-.2-2.1 0-4.1.6-5.8 1.8l-113.8 76.6c-9.2 6.2-14.7 16.4-14.7 27.5.1 11 5.5 21.3 14.7 27.4zM387 348.8h-45.5c-5.7 0-10.4 4.7-10.4 10.4v153.3c0 5.7 4.7 10.4 10.4 10.4H387c5.7 0 10.4-4.7 10.4-10.4V359.2c0-5.7-4.7-10.4-10.4-10.4zm333.8 241.3-41-20a10.3 10.3 0 0 0-8.1-.5c-2.6.9-4.8 2.9-5.9 5.4-30.1 64.9-93.1 109.1-164.4 115.2-5.7.5-9.9 5.5-9.5 11.2l3.9 45.5c.5 5.3 5 9.5 10.3 9.5h.9c94.8-8 178.5-66.5 218.6-152.7 2.4-5 .3-11.2-4.8-13.6zm186-186.1c-11.9-42-30.5-81.4-55.2-117.1-24.1-34.9-53.5-65.6-87.5-91.2-33.9-25.6-71.5-45.5-111.6-59.2-41.2-14-84.1-21.1-127.8-21.1h-1.2c-75.4 0-148.8 21.4-212.5 61.7-63.7 40.3-114.3 97.6-146.5 165.8-32.2 68.1-44.3 143.6-35.1 218.4 9.3 74.8 39.4 145 87.3 203.3.1.2.3.3.4.5l36.2 38.4c1.1 1.2 2.5 2.1 3.9 2.6 73.3 66.7 168.2 103.5 267.5 103.5 73.3 0 145.2-20.3 207.7-58.7 37.3-22.9 70.3-51.5 98.1-85 27.1-32.7 48.7-69.5 64.2-109.1 15.5-39.7 24.4-81.3 26.6-123.8 2.4-43.6-2.5-87-14.5-129zm-60.5 181.1c-8.3 37-22.8 72-43 104-19.7 31.1-44.3 58.6-73.1 81.7-28.8 23.1-61 41-95.7 53.4-35.6 12.7-72.9 19.1-110.9 19.1-82.6 0-161.7-30.6-222.8-86.2l-34.1-35.8c-23.9-29.3-42.4-62.2-55.1-97.7-12.4-34.7-18.8-71-19.2-107.9-.4-36.9 5.4-73.3 17.1-108.2 12-35.8 30-69.2 53.4-99.1 31.7-40.4 71.1-72 117.2-94.1 44.5-21.3 94-32.6 143.4-32.6 49.3 0 97 10.8 141.8 32 34.3 16.3 65.3 38.1 92 64.8 26.1 26 47.5 56 63.6 89.2 16.2 33.2 26.6 68.5 31 105.1 4.6 37.5 2.7 75.3-5.6 112.3z\",fill:\"currentColor\"})),ImageIcon:()=>m(\"svg\",{viewBox:\"0 0 1024 1024\",width:\"24\",height:\"24\"},[m(\"path\",{d:\"M784 112H240c-88 0-160 72-160 160v480c0 88 72 160 160 160h544c88 0 160-72 160-160V272c0-88-72-160-160-160zm96 640c0 52.8-43.2 96-96 96H240c-52.8 0-96-43.2-96-96V272c0-52.8 43.2-96 96-96h544c52.8 0 96 43.2 96 96v480z\",fill:\"currentColor\"}),m(\"path\",{d:\"M352 480c52.8 0 96-43.2 96-96s-43.2-96-96-96-96 43.2-96 96 43.2 96 96 96zm0-128c17.6 0 32 14.4 32 32s-14.4 32-32 32-32-14.4-32-32 14.4-32 32-32zm462.4 379.2-3.2-3.2-177.6-177.6c-25.6-25.6-65.6-25.6-91.2 0l-80 80-36.8-36.8c-25.6-25.6-65.6-25.6-91.2 0L200 728c-4.8 6.4-8 14.4-8 24 0 17.6 14.4 32 32 32 9.6 0 16-3.2 22.4-9.6L380.8 640l134.4 134.4c6.4 6.4 14.4 9.6 24 9.6 17.6 0 32-14.4 32-32 0-9.6-4.8-17.6-9.6-24l-52.8-52.8 80-80L769.6 776c6.4 4.8 12.8 8 20.8 8 17.6 0 32-14.4 32-32 0-8-3.2-16-8-20.8z\",fill:\"currentColor\"})]),ImageWall:He,MarkdownIcon:()=>m(\"svg\",{width:\"16\",height:\"16\",ariaHidden:\"true\"},m(\"path\",{d:\"M14.85 3H1.15C.52 3 0 3.52 0 4.15v7.69C0 12.48.52 13 1.15 13h13.69c.64 0 1.15-.52 1.15-1.15v-7.7C16 3.52 15.48 3 14.85 3zM9 11H7V8L5.5 9.92 4 8v3H2V5h2l1.5 2L7 5h2v6zm2.99.5L9.5 8H11V5h2v3h1.5l-2.51 3.5z\",fill:\"currentColor\"})),PreviewIcon:()=>m(\"svg\",{viewBox:\"0 0 1024 1024\",width:\"24\",height:\"24\"},[m(\"path\",{d:\"M710.816 654.301c70.323-96.639 61.084-230.578-23.705-314.843-46.098-46.098-107.183-71.109-172.28-71.109-65.008 0-126.092 25.444-172.28 71.109-45.227 46.098-70.756 107.183-70.756 172.106 0 64.923 25.444 126.007 71.194 172.106 46.099 46.098 107.184 71.109 172.28 71.109 51.414 0 100.648-16.212 142.824-47.404l126.53 126.006c7.058 7.06 16.297 10.979 26.406 10.979 10.105 0 19.343-3.919 26.402-10.979 14.467-14.467 14.467-38.172 0-52.723L710.816 654.301zm-315.107-23.265c-65.88-65.88-65.88-172.54 0-238.42 32.069-32.07 74.245-49.149 119.471-49.149 45.227 0 87.407 17.603 119.472 49.149 65.88 65.879 65.88 172.539 0 238.42-63.612 63.178-175.242 63.178-238.943 0zm0 0\",fill:\"currentColor\"}),m(\"path\",{d:\"M703.319 121.603H321.03c-109.8 0-199.469 89.146-199.469 199.38v382.034c0 109.796 89.236 199.38 199.469 199.38h207.397c20.653 0 37.384-16.645 37.384-37.299 0-20.649-16.731-37.296-37.384-37.296H321.03c-68.582 0-124.352-55.77-124.352-124.267V321.421c0-68.496 55.77-124.267 124.352-124.267h382.289c68.582 0 124.352 55.771 124.352 124.267V524.72c0 20.654 16.736 37.299 37.385 37.299 20.654 0 37.384-16.645 37.384-37.299V320.549c-.085-109.8-89.321-198.946-199.121-198.946zm0 0\",fill:\"currentColor\"})]),LoadingIcon:ze,GifIcon:()=>m(\"svg\",{width:24,height:24,fill:\"currentcolor\",viewBox:\"0 0 24 24\"},[m(\"path\",{style:\"transform: translateY(0.5px)\",d:\"M18.968 10.5H15.968V11.484H17.984V12.984H15.968V15H14.468V9H18.968V10.5V10.5ZM8.984 9C9.26533 9 9.49967 9.09367 9.687 9.281C9.87433 9.46833 9.968 9.70267 9.968 9.984V10.5H6.499V13.5H8.468V12H9.968V14.016C9.968 14.2973 9.87433 14.5317 9.687 14.719C9.49967 14.9063 9.26533 15 8.984 15H5.984C5.70267 15 5.46833 14.9063 5.281 14.719C5.09367 14.5317 5 14.2973 5 14.016V9.985C5 9.70367 5.09367 9.46933 5.281 9.282C5.46833 9.09467 5.70267 9.001 5.984 9.001H8.984V9ZM11.468 9H12.968V15H11.468V9V9Z\"}),m(\"path\",{d:\"M18.5 3H5.75C3.6875 3 2 4.6875 2 6.75V18C2 20.0625 3.6875 21.75 5.75 21.75H18.5C20.5625 21.75 22.25 20.0625 22.25 18V6.75C22.25 4.6875 20.5625 3 18.5 3ZM20.75 18C20.75 19.2375 19.7375 20.25 18.5 20.25H5.75C4.5125 20.25 3.5 19.2375 3.5 18V6.75C3.5 5.5125 4.5125 4.5 5.75 4.5H18.5C19.7375 4.5 20.75 5.5125 20.75 6.75V18Z\"})])},props:{rootId:{type:String,default:\"\"},replyId:{type:String,default:\"\"},replyUser:{type:String,default:\"\"},edit:{type:Object,default:null}},emits:[\"submit\",\"cancel-reply\",\"cancel-edit\"],setup(e,{emit:t}){const n=$(\"config\"),o=he(\"WALINE_COMMENT_BOX_EDITOR\",\"\"),a=he(\"WALINE_USER_META\",{nick:\"\",mail:\"\",link:\"\"}),r=jt(),c=i({}),u=i(null),m=i(null),d=i(null),v=i(null),p=i(null),g=i(null),f=i(null),h=i({tabs:[],map:{}}),y=i(0),w=i(!1),b=i(!1),k=i(!1),C=i(\"\"),S=i(0),x=j({loading:!0,list:[]}),E=i(0),O=i(!1),R=i(\"\"),A=i(!1),z=I((()=>n.value.locale)),M=I((()=>Boolean(r.value?.token))),P=I((()=>!1!==n.value.imageUploader)),T=e=>{const t=u.value,n=t.selectionStart,l=t.selectionEnd||0,a=t.scrollTop;o.value=t.value.substring(0,n)+e+t.value.substring(l,t.value.length),t.focus(),t.selectionStart=n+e.length,t.selectionEnd=n+e.length,t.scrollTop=a},H=e=>{const t=`![${n.value.locale.uploading} ${e.name}]()`;return T(t),Promise.resolve().then((()=>n.value.imageUploader(e))).then((n=>{o.value=o.value.replace(t,`\\r\\n![${e.name}](${n})`)})).catch((e=>{alert(e.message),o.value=o.value.replace(t,\"\")}))},N=()=>{const{serverURL:l,lang:i,login:s,wordLimit:m,requiredMeta:d}=n.value,v={comment:R.value,nick:a.value.nick,mail:a.value.mail,link:a.value.link,ua:navigator.userAgent,url:n.value.path};if(r.value?.token)v.nick=r.value.display_name,v.mail=r.value.email,v.link=r.value.url;else{if(\"force\"===s)return;if(d.indexOf(\"nick\")>-1&&!v.nick)return c.value.nick?.focus(),alert(z.value.nickError);if(d.indexOf(\"mail\")>-1&&!v.mail||v.mail&&!/^\\w(?:[\\w._-]*\\w)?@(?:\\w(?:[\\w-]*\\w)?\\.)*\\w+$/.exec(v.mail))return c.value.mail?.focus(),alert(z.value.mailError);if(!v.comment)return void u.value?.focus();v.nick||(v.nick=z.value.anonymous)}if(!O.value)return alert(z.value.wordHint.replace(\"$0\",m[0].toString()).replace(\"$1\",m[1].toString()).replace(\"$2\",S.value.toString()));v.comment=Ct(v.comment,h.value.map),e.replyId&&e.rootId?(v.pid=e.replyId,v.rid=e.rootId,v.at=e.replyUser):e.edit&&(v.eid=e.edit.objectId),A.value=!0,(({serverURL:e,lang:t,token:n,comment:l})=>{const o={\"Content-Type\":\"application/json\"};return n&&(o.Authorization=`Bearer ${n}`),l.eid?fetch(`${e}/comment/${l.eid}?lang=${t}`,{method:\"PUT\",headers:o,body:JSON.stringify(l)}).then((e=>e.json())):fetch(`${e}/comment?lang=${t}`,{method:\"POST\",headers:o,body:JSON.stringify(l)}).then((e=>e.json()))})({serverURL:l,lang:i,token:r.value?.token,comment:v}).then((n=>{if(A.value=!1,n.errmsg)return alert(n.errmsg);t(\"submit\",n.data),o.value=\"\",C.value=\"\",e.replyId&&t(\"cancel-reply\"),e.edit?.objectId&&t(\"cancel-edit\")})).catch((e=>{A.value=!1,alert(e.message)}))},B=e=>{d.value.contains(e.target)||v.value.contains(e.target)||(w.value=!1),p.value.contains(e.target)||g.value.contains(e.target)||(b.value=!1)},V=async e=>{const{scrollTop:t,clientHeight:l,scrollHeight:o}=e.target,a=(l+t)/o,i=n.value.search,r=f.value?.value||\"\";a<.9||x.loading||(x.loading=!0,x.list.push(...i.more?await i.more(r,x.list.length):await i.search(r)),x.loading=!1,setTimeout((()=>{e.target.scrollTop=t}),50))},_=W((e=>{x.list=[],V(e)}),300);s([n,S],(([e,t])=>{const{wordLimit:n}=e;n?t<n[0]&&0!==n[0]?(E.value=n[0],O.value=!1):t>n[1]?(E.value=n[1],O.value=!1):(E.value=n[1],O.value=!0):(E.value=0,O.value=!0)}),{immediate:!0}),s(b,(async e=>{if(!e)return;const t=n.value.search;f.value&&(f.value.value=\"\"),x.loading=!0,x.list=t.default?await t.default():await t.search(\"\"),x.loading=!1}));const F=({data:e})=>{e&&\"profile\"===e.type&&(r.value={...r.value,...e.data},[localStorage,sessionStorage].filter((e=>e.getItem(\"WALINE_USER\"))).forEach((e=>e.setItem(\"WALINE_USER\",JSON.stringify(r)))))};return l((()=>{document.body.addEventListener(\"click\",B),window.addEventListener(\"message\",F),e.edit?.objectId&&(o.value=e.edit.orig),s((()=>o.value),(e=>{const{highlighter:t,texRenderer:l}=n.value;R.value=e,C.value=It(e,{emojiMap:h.value.map,highlighter:t,texRenderer:l}),S.value=(e=>(e=>e.match(/[\\w\\d\\s\\u00C0-\\u024F]+/giu)||[])(e).reduce(((e,t)=>e+(\"\"===t.trim()?0:t.trim().split(/\\s+/u).length)),0)+(e=>e.match(/[\\u4E00-\\u9FA5]/gu)||[])(e).length)(e),e?U(u.value):U.destroy(u.value)}),{immediate:!0}),s((()=>n.value.emoji),(e=>{return(t=Array.isArray(e)?e:[],Promise.all(t.map((e=>\"string\"==typeof e?dt(ot(e)):Promise.resolve(e)))).then((e=>{const t={tabs:[],map:{}};return e.forEach((e=>{const{name:n,folder:l,icon:o,prefix:a,type:i,items:r}=e;t.tabs.push({name:n,icon:vt(o,l,a,i),items:r.map((e=>{const n=`${a||\"\"}${e}`;return t.map[n]=vt(e,l,a,i),n}))})})),t}))).then((e=>{h.value=e}));var t}),{immediate:!0})})),L((()=>{document.body.removeEventListener(\"click\",B),window.removeEventListener(\"message\",F)})),{config:n,locale:z,insert:T,onChange:()=>{const e=m.value;e.files&&P.value&&H(e.files[0]).then((()=>{e.value=\"\"}))},onDrop:e=>{if(e.dataTransfer?.items){const t=yt(e.dataTransfer.items);t&&P.value&&(H(t),e.preventDefault())}},onKeyDown:e=>{const t=e.key;(e.ctrlKey||e.metaKey)&&\"Enter\"===t&&N()},onPaste:e=>{if(e.clipboardData){const t=yt(e.clipboardData.items);t&&P.value&&H(t)}},onLogin:e=>{e.preventDefault();const{lang:t,serverURL:l}=n.value,o=(window.innerWidth-450)/2,a=(window.innerHeight-450)/2,i=window.open(`${l}/ui/login?lng=${encodeURIComponent(t)}`,\"_blank\",`width=450,height=450,left=${o},top=${a},scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no`);i?.postMessage({type:\"TOKEN\",data:null},\"*\");const s=({data:e})=>{e&&\"userInfo\"===e.type&&e.data.token&&(i?.close(),r.value=e.data,(e.data.remember?localStorage:sessionStorage).setItem(\"WALINE_USER\",JSON.stringify(e.data)),window.removeEventListener(\"message\",s))};window.addEventListener(\"message\",s)},onLogout:()=>{r.value={},localStorage.setItem(\"WALINE_USER\",\"null\"),sessionStorage.setItem(\"WALINE_USER\",\"null\")},onProfile:e=>{e.preventDefault();const{lang:t,serverURL:l}=n.value,o=(window.innerWidth-800)/2,a=(window.innerHeight-800)/2;window.open(`${l}/ui/profile?lng=${encodeURIComponent(t)}`,\"_blank\",`width=800,height=800,left=${o},top=${a},scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no`)?.postMessage({type:\"TOKEN\",data:r.value.token},\"*\")},submitComment:N,onImageWallScroll:V,onGifSearch:_,isLogin:M,userInfo:r,isSubmitting:A,wordNumber:S,wordLimit:E,isWordNumberLegal:O,editor:o,userMeta:a,emoji:h,emojiTabIndex:y,showEmoji:w,gifData:x,showGif:b,canUploadImage:P,previewText:C,showPreview:k,inputRefs:c,editorRef:u,emojiButtonRef:d,emojiPopupRef:v,gifButtonRef:p,gifPopupRef:g,imageUploadRef:m,gifSearchInputRef:f}}});const Et={class:\"wl-comment\"},Ot={key:0,class:\"wl-login-info\"},Rt={class:\"wl-avatar\"},At=[\"title\"],zt=[\"title\"],Mt=[\"src\"],Pt=[\"title\",\"textContent\"],Ut={class:\"wl-panel\"},Tt=[\"for\",\"textContent\"],Ht=[\"id\",\"onUpdate:modelValue\",\"name\",\"type\"],Nt=[\"placeholder\"],Bt={class:\"wl-preview\"},Vt=C(\"hr\",null,null,-1),_t=[\"innerHTML\"],Ft={class:\"wl-footer\"},Dt={class:\"wl-actions\"},Wt={href:\"https://guides.github.com/features/mastering-markdown/\",title:\"Markdown Guide\",\"aria-label\":\"Markdown is supported\",class:\"wl-action\",target:\"_blank\",rel:\"noreferrer\"},Gt=[\"title\"],qt=[\"title\"],Jt=[\"title\"],Kt=[\"title\"],Qt={class:\"wl-info\"},Zt={class:\"wl-text-number\"},Yt={key:0},Xt=M(\" \u00A0/\u00A0 \"),en=[\"textContent\"],tn=[\"textContent\"],nn=[\"disabled\"],ln=[\"placeholder\"],on={key:0,class:\"wl-loading\"},an={key:0,class:\"wl-tab-wrapper\"},rn=[\"title\",\"onClick\"],sn=[\"src\",\"alt\"],cn={key:0,class:\"wl-tabs\"},un=[\"onClick\"],mn=[\"src\",\"alt\",\"title\"],dn=[\"title\"];var vn=Pe(xt,[[\"render\",function(e,t,n,l,o,a){const i=p(\"CloseIcon\"),r=p(\"MarkdownIcon\"),s=p(\"EmojiIcon\"),c=p(\"GifIcon\"),u=p(\"ImageIcon\"),m=p(\"PreviewIcon\"),d=p(\"LoadingIcon\"),v=p(\"ImageWall\");return g(),f(\"div\",Et,[\"disable\"!==e.config.login&&e.isLogin&&!e.edit?.objectId?(g(),f(\"div\",Ot,[C(\"div\",Rt,[C(\"button\",{class:\"wl-logout-btn\",title:e.locale.logout,onClick:t[0]||(t[0]=(...t)=>e.onLogout&&e.onLogout(...t))},[S(i,{size:14})],8,At),C(\"a\",{href:\"#\",class:\"wl-login-nick\",\"aria-label\":\"Profile\",title:e.locale.profile,onClick:t[1]||(t[1]=(...t)=>e.onProfile&&e.onProfile(...t))},[C(\"img\",{src:e.userInfo.avatar,alt:\"avatar\"},null,8,Mt)],8,zt)]),C(\"a\",{href:\"#\",class:\"wl-login-nick\",\"aria-label\":\"Profile\",title:e.locale.profile,onClick:t[2]||(t[2]=(...t)=>e.onProfile&&e.onProfile(...t)),textContent:x(e.userInfo.display_name)},null,8,Pt)])):k(\"v-if\",!0),C(\"div\",Ut,[\"force\"!==e.config.login&&e.config.meta.length&&!e.isLogin?(g(),f(\"div\",{key:0,class:E([\"wl-header\",`item${e.config.meta.length}`])},[(g(!0),f(y,null,w(e.config.meta,(t=>(g(),f(\"div\",{key:t,class:\"wl-header-item\"},[C(\"label\",{for:t,textContent:x(e.locale[t]+(e.config.requiredMeta.includes(t)||!e.config.requiredMeta.length?\"\":`(${e.locale.optional})`))},null,8,Tt),O(C(\"input\",{id:`wl-${t}`,ref_for:!0,ref:n=>{n&&(e.inputRefs[t]=n)},\"onUpdate:modelValue\":n=>e.userMeta[t]=n,class:E([\"wl-input\",`wl-${t}`]),name:t,type:\"mail\"===t?\"email\":\"text\"},null,10,Ht),[[R,e.userMeta[t]]])])))),128))],2)):k(\"v-if\",!0),O(C(\"textarea\",{id:\"wl-edit\",ref:\"editorRef\",\"onUpdate:modelValue\":t[3]||(t[3]=t=>e.editor=t),class:\"wl-editor\",placeholder:e.replyUser?`@${e.replyUser}`:e.locale.placeholder,onKeydown:t[4]||(t[4]=(...t)=>e.onKeyDown&&e.onKeyDown(...t)),onDrop:t[5]||(t[5]=(...t)=>e.onDrop&&e.onDrop(...t)),onPaste:t[6]||(t[6]=(...t)=>e.onPaste&&e.onPaste(...t))},null,40,Nt),[[A,e.editor]]),O(C(\"div\",Bt,[Vt,C(\"h4\",null,x(e.locale.preview)+\":\",1),k(\" eslint-disable-next-line vue/no-v-html \"),C(\"div\",{class:\"wl-content\",innerHTML:e.previewText},null,8,_t)],512),[[z,e.showPreview]]),C(\"div\",Ft,[C(\"div\",Dt,[C(\"a\",Wt,[S(r)]),O(C(\"button\",{ref:\"emojiButtonRef\",class:E([\"wl-action\",{actived:e.showEmoji}]),title:e.locale.emoji,onClick:t[7]||(t[7]=t=>e.showEmoji=!e.showEmoji)},[S(s)],10,Gt),[[z,e.emoji.tabs.length]]),e.config.search?(g(),f(\"button\",{key:0,ref:\"gifButtonRef\",class:E([\"wl-action\",{actived:e.showGif}]),title:e.locale.gif,onClick:t[8]||(t[8]=t=>e.showGif=!e.showGif)},[S(c)],10,qt)):k(\"v-if\",!0),C(\"input\",{id:\"wl-image-upload\",ref:\"imageUploadRef\",class:\"upload\",type:\"file\",accept:\".png,.jpg,.jpeg,.webp,.bmp,.gif\",onChange:t[9]||(t[9]=(...t)=>e.onChange&&e.onChange(...t))},null,544),e.canUploadImage?(g(),f(\"label\",{key:1,for:\"wl-image-upload\",class:\"wl-action\",title:e.locale.uploadImage},[S(u)],8,Jt)):k(\"v-if\",!0),C(\"button\",{class:E([\"wl-action\",{actived:e.showPreview}]),title:e.locale.preview,onClick:t[10]||(t[10]=t=>e.showPreview=!e.showPreview)},[S(m)],10,Kt)]),C(\"div\",Qt,[C(\"div\",Zt,[M(x(e.wordNumber)+\" \",1),e.config.wordLimit?(g(),f(\"span\",Yt,[Xt,C(\"span\",{class:E({illegal:!e.isWordNumberLegal}),textContent:x(e.wordLimit)},null,10,en)])):k(\"v-if\",!0),M(\" \u00A0\"+x(e.locale.word),1)]),\"disable\"===e.config.login||e.isLogin?k(\"v-if\",!0):(g(),f(\"button\",{key:0,class:\"wl-btn\",onClick:t[11]||(t[11]=(...t)=>e.onLogin&&e.onLogin(...t)),textContent:x(e.locale.login)},null,8,tn)),\"force\"!==e.config.login||e.isLogin?(g(),f(\"button\",{key:1,class:\"wl-btn primary\",title:\"Cmd|Ctrl + Enter\",disabled:e.isSubmitting,onClick:t[12]||(t[12]=(...t)=>e.submitComment&&e.submitComment(...t))},[e.isSubmitting?(g(),b(d,{key:0,size:16})):(g(),f(y,{key:1},[M(x(e.locale.submit),1)],64))],8,nn)):k(\"v-if\",!0)]),C(\"div\",{ref:\"gifPopupRef\",class:E([\"wl-gif-popup\",{display:e.showGif}])},[C(\"input\",{ref:\"gifSearchInputRef\",type:\"text\",placeholder:e.locale.gifSearchPlaceholder,onInput:t[13]||(t[13]=(...t)=>e.onGifSearch&&e.onGifSearch(...t))},null,40,ln),S(v,{items:e.gifData.list,\"column-width\":200,gap:6,onInsert:t[14]||(t[14]=t=>e.insert(t)),onScroll:e.onImageWallScroll},null,8,[\"items\",\"onScroll\"]),e.gifData.loading?(g(),f(\"div\",on,[S(d,{size:30})])):k(\"v-if\",!0)],2),C(\"div\",{ref:\"emojiPopupRef\",class:E([\"wl-emoji-popup\",{display:e.showEmoji}])},[(g(!0),f(y,null,w(e.emoji.tabs,((t,n)=>(g(),f(y,{key:t.name},[n===e.emojiTabIndex?(g(),f(\"div\",an,[(g(!0),f(y,null,w(t.items,(t=>(g(),f(\"button\",{key:t,title:t,onClick:n=>e.insert(`:${t}:`)},[e.showEmoji?(g(),f(\"img\",{key:0,class:\"wl-emoji\",src:e.emoji.map[t],alt:t,loading:\"lazy\",referrerPolicy:\"no-referrer\"},null,8,sn)):k(\"v-if\",!0)],8,rn)))),128))])):k(\"v-if\",!0)],64)))),128)),e.emoji.tabs.length>1?(g(),f(\"div\",cn,[(g(!0),f(y,null,w(e.emoji.tabs,((t,n)=>(g(),f(\"button\",{key:t.name,class:E([\"wl-tab\",{active:e.emojiTabIndex===n}]),onClick:t=>e.emojiTabIndex=n},[C(\"img\",{class:\"wl-emoji\",src:t.icon,alt:t.name,title:t.name,loading:\"lazy\",referrerPolicy:\"no-referrer\"},null,8,mn)],10,un)))),128))])):k(\"v-if\",!0)],2)])]),e.replyId||e.edit?.objectId?(g(),f(\"button\",{key:1,class:\"wl-close\",title:e.locale.cancelReply,onClick:t[15]||(t[15]=t=>e.$emit(e.replyId?\"cancel-reply\":\"cancel-edit\"))},[S(i,{size:24})],8,dn)):k(\"v-if\",!0)])}],[\"__file\",\"CommentBox.vue\"]]);const pn=[\"approved\",\"waiting\",\"spam\"];var gn=d({components:{CommentBox:vn,DeleteIcon:()=>m(\"svg\",{viewBox:\"0 0 1024 1024\",width:\"24\",height:\"24\"},m(\"path\",{d:\"m341.013 394.667 27.755 393.45h271.83l27.733-393.45h64.106l-28.01 397.952a64 64 0 0 1-63.83 59.498H368.768a64 64 0 0 1-63.83-59.52l-28.053-397.93h64.128zm139.307 19.818v298.667h-64V414.485h64zm117.013 0v298.667h-64V414.485h64zM181.333 288h640v64h-640v-64zm453.483-106.667v64h-256v-64h256z\",fill:\"red\"})),LikeIcon:({active:e=!1})=>m(\"svg\",{viewBox:\"0 0 1024 1024\",width:\"24\",height:\"24\"},[m(\"path\",{d:\"M850.654 323.804c-11.042-25.625-26.862-48.532-46.885-68.225-20.022-19.61-43.258-34.936-69.213-45.73-26.78-11.124-55.124-16.727-84.375-16.727-40.622 0-80.256 11.123-114.698 32.135A214.79 214.79 0 0 0 512 241.819a214.79 214.79 0 0 0-23.483-16.562c-34.442-21.012-74.076-32.135-114.698-32.135-29.25 0-57.595 5.603-84.375 16.727-25.872 10.711-49.19 26.12-69.213 45.73-20.105 19.693-35.843 42.6-46.885 68.225-11.453 26.615-17.303 54.877-17.303 83.963 0 27.439 5.603 56.03 16.727 85.117 9.31 24.307 22.659 49.52 39.715 74.981 27.027 40.293 64.188 82.316 110.33 124.915 76.465 70.615 152.189 119.394 155.402 121.371l19.528 12.525c8.652 5.52 19.776 5.52 28.427 0l19.529-12.525c3.213-2.06 78.854-50.756 155.401-121.371 46.143-42.6 83.304-84.622 110.33-124.915 17.057-25.46 30.487-50.674 39.716-74.981 11.124-29.087 16.727-57.678 16.727-85.117.082-29.086-5.768-57.348-17.221-83.963z\"+(e?\"\":\"M512 761.5S218.665 573.55 218.665 407.767c0-83.963 69.461-152.023 155.154-152.023 60.233 0 112.473 33.618 138.181 82.727 25.708-49.109 77.948-82.727 138.18-82.727 85.694 0 155.155 68.06 155.155 152.023C805.335 573.551 512 761.5 512 761.5z\"),fill:e?\"red\":\"currentColor\"})]),ReplyIcon:()=>m(\"svg\",{viewBox:\"0 0 1024 1024\",width:\"24\",height:\"24\"},m(\"path\",{d:\"M810.667 213.333a64 64 0 0 1 64 64V704a64 64 0 0 1-64 64H478.336l-146.645 96.107a21.333 21.333 0 0 1-33.024-17.856V768h-85.334a64 64 0 0 1-64-64V277.333a64 64 0 0 1 64-64h597.334zm0 64H213.333V704h149.334v63.296L459.243 704h351.424V277.333zm-271.36 213.334v64h-176.64v-64h176.64zm122.026-128v64H362.667v-64h298.666z\",fill:\"currentColor\"})),EditIcon:()=>m(\"svg\",{viewBox:\"0 0 1024 1024\",width:\"24\",height:\"24\"},m(\"path\",{d:\"M813.039 318.772L480.53 651.278H360.718V531.463L693.227 198.961C697.904 194.284 704.027 192 710.157 192C716.302 192 722.436 194.284 727.114 198.961L813.039 284.88C817.72 289.561 820 295.684 820 301.825C820 307.95 817.72 314.093 813.039 318.772ZM710.172 261.888L420.624 551.431V591.376H460.561L750.109 301.825L710.172 261.888ZM490.517 291.845H240.906V771.09H720.156V521.479C720.156 504.947 733.559 491.529 750.109 491.529C766.653 491.529 780.063 504.947 780.063 521.479V791.059C780.063 813.118 762.18 831 740.125 831H220.937C198.882 831 181 813.118 181 791.059V271.872C181 249.817 198.882 231.935 220.937 231.935H490.517C507.06 231.935 520.47 245.352 520.47 261.888C520.47 278.424 507.06 291.845 490.517 291.845Z\",fill:\"currentColor\"})),VerifiedIcon:()=>m(\"svg\",{class:\"verified-icon\",viewBox:\"0 0 1024 1024\",width:\"14\",height:\"14\"},m(\"path\",{d:\"m894.4 461.56-54.4-63.2c-10.4-12-18.8-34.4-18.8-50.4v-68c0-42.4-34.8-77.2-77.2-77.2h-68c-15.6 0-38.4-8.4-50.4-18.8l-63.2-54.4c-27.6-23.6-72.8-23.6-100.8 0l-62.8 54.8c-12 10-34.8 18.4-50.4 18.4h-69.2c-42.4 0-77.2 34.8-77.2 77.2v68.4c0 15.6-8.4 38-18.4 50l-54 63.6c-23.2 27.6-23.2 72.4 0 100l54 63.6c10 12 18.4 34.4 18.4 50v68.4c0 42.4 34.8 77.2 77.2 77.2h69.2c15.6 0 38.4 8.4 50.4 18.8l63.2 54.4c27.6 23.6 72.8 23.6 100.8 0l63.2-54.4c12-10.4 34.4-18.8 50.4-18.8h68c42.4 0 77.2-34.8 77.2-77.2v-68c0-15.6 8.4-38.4 18.8-50.4l54.4-63.2c23.2-27.6 23.2-73.2-.4-100.8zm-216-25.2-193.2 193.2a30 30 0 0 1-42.4 0l-96.8-96.8a30.16 30.16 0 0 1 0-42.4c11.6-11.6 30.8-11.6 42.4 0l75.6 75.6 172-172c11.6-11.6 30.8-11.6 42.4 0 11.6 11.6 11.6 30.8 0 42.4z\",fill:\"#27ae60\"}))},props:{comment:{type:Object,required:!0},rootId:{type:String,required:!0},reply:{type:Object,default:null},edit:{type:Object,default:null}},emits:[\"submit\",\"reply\",\"like\",\"delete\",\"status\",\"sticky\",\"edit\"],setup(e){const t=$(\"config\"),n=St(),l=jt(),o=I((()=>t.value.locale)),a=I((()=>{const{link:t}=e.comment;return t?at(t)?t:`https://${t}`:\"\"})),i=I((()=>n.value.includes(e.comment.objectId))),r=((e,t)=>{const n=je();return I((()=>mt(e,n.value,t)))})(e.comment.insertedAt,o.value),s=I((()=>\"administrator\"===l.value.type)),c=I((()=>e.comment.user_id&&l.value.objectId===e.comment.user_id));console.log(\"lizheming:\",e.comment.user_id,l.value.objectId,c.value);const u=I((()=>e.comment.objectId===e.reply?.objectId)),m=I((()=>e.comment.objectId===e.edit?.objectId));return{config:t,locale:o,isReplyingCurrent:u,isEditingCurrent:m,link:a,like:i,time:r,isAdmin:s,isOwner:c,commentStatus:pn}}});const fn=[\"id\"],hn={class:\"wl-user\",\"aria-hidden\":\"true\"},yn=[\"src\"],wn={class:\"wl-card\"},bn={class:\"wl-head\"},kn=[\"href\"],Cn={key:1,class:\"wl-nick\"},In=[\"textContent\"],$n=[\"textContent\"],jn=[\"textContent\"],Ln=[\"textContent\"],Sn=[\"textContent\"],xn={class:\"wl-comment-actions\"},En=[\"title\"],On=[\"textContent\"],Rn=[\"title\"],An={class:\"wl-meta\",\"aria-hidden\":\"true\"},zn=[\"data-value\",\"textContent\"],Mn=[\"data-value\",\"textContent\"],Pn=[\"data-value\",\"textContent\"],Un=[\"innerHTML\"],Tn={key:1,class:\"wl-admin-actions\"},Hn={class:\"wl-comment-status\"},Nn=[\"disabled\",\"onClick\",\"textContent\"],Bn={key:3,class:\"wl-quote\"};const Vn=[{key:\"insertedAt_desc\",name:\"latest\"},{key:\"insertedAt_asc\",name:\"oldest\"},{key:\"like_desc\",name:\"hottest\"}];var _n=d({name:\"WalineRoot\",components:{CommentBox:vn,CommentCard:Pe(gn,[[\"render\",function(e,t,n,l,o,a){const i=p(\"VerifiedIcon\"),r=p(\"EditIcon\"),s=p(\"DeleteIcon\"),c=p(\"LikeIcon\"),u=p(\"ReplyIcon\"),m=p(\"CommentBox\"),d=p(\"CommentCard\",!0);return g(),f(\"div\",{id:e.comment.objectId,class:\"wl-item\"},[C(\"div\",hn,[e.comment.avatar?(g(),f(\"img\",{key:0,src:e.comment.avatar},null,8,yn)):k(\"v-if\",!0),e.comment.type?(g(),b(i,{key:1})):k(\"v-if\",!0)]),C(\"div\",wn,[C(\"div\",bn,[e.link?(g(),f(\"a\",{key:0,class:\"wl-nick\",href:e.link,target:\"_blank\",rel:\"nofollow noreferrer\"},x(e.comment.nick),9,kn)):(g(),f(\"span\",Cn,x(e.comment.nick),1)),\"administrator\"===e.comment.type?(g(),f(\"span\",{key:2,class:\"wl-badge\",textContent:x(e.locale.admin)},null,8,In)):k(\"v-if\",!0),e.comment.label?(g(),f(\"span\",{key:3,class:\"wl-badge\",textContent:x(e.comment.label)},null,8,$n)):k(\"v-if\",!0),e.comment.sticky?(g(),f(\"span\",{key:4,class:\"wl-badge\",textContent:x(e.locale.sticky)},null,8,jn)):k(\"v-if\",!0),void 0!==e.comment.level&&e.comment.level>=0?(g(),f(\"span\",{key:5,class:E(`wl-badge level${e.comment.level}`),textContent:x(e.locale[`level${e.comment.level}`]||`Level ${e.comment.level}`)},null,10,Ln)):k(\"v-if\",!0),C(\"span\",{class:\"wl-time\",textContent:x(e.time)},null,8,Sn),C(\"div\",xn,[e.isAdmin||e.isOwner?(g(),f(\"button\",{key:0,class:\"wl-edit\",onClick:t[0]||(t[0]=t=>e.$emit(\"edit\",e.comment))},[S(r)])):k(\"v-if\",!0),e.isAdmin||e.isOwner?(g(),f(\"button\",{key:1,class:\"wl-delete\",onClick:t[1]||(t[1]=t=>e.$emit(\"delete\",e.comment))},[S(s)])):k(\"v-if\",!0),C(\"button\",{class:\"wl-like\",title:e.like?e.locale.cancelLike:e.locale.like,onClick:t[2]||(t[2]=t=>e.$emit(\"like\",e.comment))},[S(c,{active:e.like},null,8,[\"active\"]),\"like\"in e.comment?(g(),f(\"span\",{key:0,textContent:x(e.comment.like)},null,8,On)):k(\"v-if\",!0)],8,En),C(\"button\",{class:E([\"wl-reply\",{active:e.isReplyingCurrent}]),title:e.isReplyingCurrent?e.locale.cancelReply:e.locale.reply,onClick:t[3]||(t[3]=t=>e.$emit(\"reply\",e.isReplyingCurrent?null:e.comment))},[S(u)],10,Rn)])]),C(\"div\",An,[e.comment.addr?(g(),f(\"span\",{key:0,class:\"wl-addr\",\"data-value\":e.comment.addr,textContent:x(e.comment.addr)},null,8,zn)):k(\"v-if\",!0),e.comment.browser?(g(),f(\"span\",{key:1,class:\"wl-browser\",\"data-value\":e.comment.browser,textContent:x(e.comment.browser)},null,8,Mn)):k(\"v-if\",!0),e.comment.os?(g(),f(\"span\",{key:2,class:\"wl-os\",\"data-value\":e.comment.os,textContent:x(e.comment.os)},null,8,Pn)):k(\"v-if\",!0)]),k(\" eslint-disable vue/no-v-html \"),e.isEditingCurrent?k(\"v-if\",!0):(g(),f(\"div\",{key:0,class:\"wl-content\",innerHTML:e.comment.comment},null,8,Un)),k(\" eslint-enable vue/no-v-html \"),e.isAdmin&&!e.isEditingCurrent?(g(),f(\"div\",Tn,[C(\"span\",Hn,[(g(!0),f(y,null,w(e.commentStatus,(t=>(g(),f(\"button\",{key:t,class:E(`wl-btn wl-${t}`),disabled:e.comment.status===t,onClick:n=>e.$emit(\"status\",{status:t,comment:e.comment}),textContent:x(e.locale[t])},null,10,Nn)))),128))]),e.isAdmin&&!e.comment.rid?(g(),f(\"button\",{key:0,class:\"wl-btn wl-sticky\",onClick:t[4]||(t[4]=t=>e.$emit(\"sticky\",e.comment))},x(e.comment.sticky?e.locale.unsticky:e.locale.sticky),1)):k(\"v-if\",!0)])):k(\"v-if\",!0),e.isReplyingCurrent||e.isEditingCurrent?(g(),f(\"div\",{key:2,class:E({\"wl-reply-wrapper\":e.isReplyingCurrent,\"wl-edit-wrapper\":e.isEditingCurrent})},[S(m,{edit:e.edit,\"reply-id\":e.reply?.objectId,\"reply-user\":e.comment.nick,\"root-id\":e.rootId,onSubmit:t[5]||(t[5]=t=>e.$emit(\"submit\",t)),onCancelReply:t[6]||(t[6]=t=>e.$emit(\"reply\",null)),onCancelEdit:t[7]||(t[7]=t=>e.$emit(\"edit\",null))},null,8,[\"edit\",\"reply-id\",\"reply-user\",\"root-id\"])],2)):k(\"v-if\",!0),e.comment.children?(g(),f(\"div\",Bn,[(g(!0),f(y,null,w(e.comment.children,(n=>(g(),b(d,{key:n.objectId,comment:n,reply:e.reply,edit:e.edit,\"root-id\":e.rootId,onReply:t[8]||(t[8]=t=>e.$emit(\"reply\",t)),onSubmit:t[9]||(t[9]=t=>e.$emit(\"submit\",t)),onLike:t[10]||(t[10]=t=>e.$emit(\"like\",t)),onEdit:t[11]||(t[11]=t=>e.$emit(\"edit\",t)),onDelete:t[12]||(t[12]=t=>e.$emit(\"delete\",t)),onStatus:t[13]||(t[13]=t=>e.$emit(\"status\",t)),onSticky:t[14]||(t[14]=t=>e.$emit(\"sticky\",t))},null,8,[\"comment\",\"reply\",\"edit\",\"root-id\"])))),128))])):k(\"v-if\",!0)])],8,fn)}],[\"__file\",\"CommentCard.vue\"]]),LoadingIcon:ze},props:[\"serverURL\",\"path\",\"meta\",\"requiredMeta\",\"dark\",\"lang\",\"locale\",\"pageSize\",\"wordLimit\",\"emoji\",\"login\",\"highlighter\",\"texRenderer\",\"imageUploader\",\"search\",\"copyright\"],setup(e){const t=I((()=>(({serverURL:e,path:t=location.pathname,lang:n=\"zh-CN\",locale:l,emoji:o=[\"//unpkg.com/@waline/emojis@1.1.0/weibo\"],meta:a=[\"nick\",\"mail\",\"link\"],requiredMeta:i=[],dark:r=!1,pageSize:s=10,wordLimit:c,imageUploader:u,highlighter:m,texRenderer:d,copyright:v=!0,login:p=\"enable\",search:g=Fe(),...f})=>({serverURL:it(e),path:lt(t),locale:{...nt[n]||nt[\"zh-CN\"],...\"object\"==typeof l?l:{}},wordLimit:rt(c),meta:Be(a),requiredMeta:Be(i),imageUploader:st(u,Ve),highlighter:st(m,qe),texRenderer:st(d,_e),lang:n,dark:r,emoji:o,pageSize:s,login:p,copyright:v,search:g,...f}))(e))),n=jt(),o=St(),a=i(\"loading\"),r=i(0),c=i(1),u=i(0),m=i(Vn[0].key),d=i([]),v=i(null),p=i(null),g=I((()=>{return\"string\"==typeof(e=t.value.dark)?\"auto\"===e?`@media(prefers-color-scheme:dark){body${ct}}`:`${e}${ct}`:!0===e?`:root${ct}`:\"\";var e}));let f;Se(g);const h=e=>{const{serverURL:l,path:o,pageSize:i}=t.value,s=new AbortController;a.value=\"loading\",f?.(),gt({serverURL:l,lang:t.value.lang,path:o,pageSize:i,sortBy:m.value,page:e,signal:s.signal,token:n.value?.token}).then((t=>{a.value=\"success\",r.value=t.count,d.value.push(...t.data),c.value=e,u.value=t.totalPages})).catch((e=>{\"AbortError\"!==e.name&&(console.error(e.message),a.value=\"error\")})),f=s.abort.bind(s)},y=()=>{r.value=0,d.value=[],h(1)};return P(\"config\",t),s((()=>e.path),y),l((()=>y())),{config:t,darkmodeStyle:g,i18n:I((()=>t.value.locale)),status:a,count:r,page:c,totalPages:u,sortBy:m,sortByItems:Vn,data:d,reply:v,edit:p,loadMore:()=>h(c.value+1),refresh:y,onSortByChange:e=>{m.value!==e&&(m.value=e,y())},onReply:e=>{v.value=e},onSubmit:e=>{if(p.value)p.value.comment=e.comment,p.value.orig=e.orig;else if(e.rid){const t=d.value.find((({objectId:t})=>t===e.rid));if(!t)return;Array.isArray(t.children)||(t.children=[]),t.children.push(e)}else d.value.unshift(e)},onStatusChange:async({comment:e,status:l})=>{if(e.status===l)return;const{serverURL:o,lang:a}=t.value;await ft({serverURL:o,lang:a,token:n.value?.token,objectId:e.objectId,status:l}),e.status=l},onDelete:async({objectId:e})=>{if(!confirm(\"Are you sure you want to delete this comment?\"))return;const{serverURL:l,lang:o}=t.value;await(({serverURL:e,lang:t,token:n,objectId:l})=>fetch(`${e}/comment/${l}?lang=${t}`,{method:\"DELETE\",headers:{Authorization:`Bearer ${n}`}}).then((e=>e.json())))({serverURL:l,lang:o,token:n.value?.token,objectId:e}),d.value.some(((t,n)=>t.objectId===e?(d.value=d.value.filter(((e,t)=>t!==n)),!0):t.children.some(((l,o)=>l.objectId===e&&(d.value[n].children=t.children.filter(((e,t)=>t!==o)),!0)))))},onSticky:async e=>{if(e.rid)return;const{serverURL:l,lang:o}=t.value;await ft({serverURL:l,lang:o,token:n.value?.token,objectId:e.objectId,sticky:e.sticky?0:1}),e.sticky=!e.sticky},onLike:async e=>{const{serverURL:n,lang:l}=t.value,{objectId:a}=e,i=o.value.includes(a);await(({serverURL:e,lang:t,objectId:n,like:l})=>fetch(`${e}/comment/${n}?lang=${t}`,{method:\"PUT\",headers:pt,body:JSON.stringify({like:l})}).then((e=>e.json())))({serverURL:n,lang:l,objectId:a,like:!i}),i?o.value=o.value.filter((e=>e!==a)):(o.value=[...o.value,a],o.value.length>50&&(o.value=o.value.slice(-50))),e.like=(e.like||0)+(i?-1:1)},onEdit:e=>{p.value=e},version:\"2.8.1\"}}});const Fn={\"data-waline\":\"\"},Dn={class:\"wl-meta-head\"},Wn={class:\"wl-count\"},Gn=[\"textContent\"],qn={class:\"wl-sort\"},Jn=[\"onClick\"],Kn={class:\"wl-cards\"},Qn={key:1,class:\"wl-operation\"},Zn=[\"textContent\"],Yn={key:0,class:\"wl-loading\"},Xn=[\"textContent\"],el={class:\"wl-operation\"},tl=[\"textContent\"],nl={key:3,class:\"wl-power\"},ll=M(\" Powered by \"),ol=C(\"a\",{href:\"https://github.com/walinejs/waline\",target:\"_blank\",rel:\"noreferrer\"},\" Waline \",-1);var al=Pe(_n,[[\"render\",function(e,t,n,l,o,a){const i=p(\"CommentBox\"),r=p(\"CommentCard\"),s=p(\"LoadingIcon\");return g(),f(\"div\",Fn,[e.reply?k(\"v-if\",!0):(g(),b(i,{key:0,onSubmit:e.onSubmit},null,8,[\"onSubmit\"])),C(\"div\",Dn,[C(\"div\",Wn,[e.count?(g(),f(\"span\",{key:0,class:\"wl-num\",textContent:x(e.count)},null,8,Gn)):k(\"v-if\",!0),M(\" \"+x(e.i18n.comment),1)]),C(\"ul\",qn,[(g(!0),f(y,null,w(e.sortByItems,(t=>(g(),f(\"li\",{key:t.key,class:E([t.key===e.sortBy?\"active\":\"\"]),onClick:n=>e.onSortByChange(t.key)},x(e.i18n[t.name]),11,Jn)))),128))])]),C(\"div\",Kn,[(g(!0),f(y,null,w(e.data,(t=>(g(),b(r,{key:t.objectId,\"root-id\":t.objectId,comment:t,reply:e.reply,edit:e.edit,onReply:e.onReply,onEdit:e.onEdit,onSubmit:e.onSubmit,onStatus:e.onStatusChange,onDelete:e.onDelete,onSticky:e.onSticky,onLike:e.onLike},null,8,[\"root-id\",\"comment\",\"reply\",\"edit\",\"onReply\",\"onEdit\",\"onSubmit\",\"onStatus\",\"onDelete\",\"onSticky\",\"onLike\"])))),128))]),\"error\"===e.status?(g(),f(\"div\",Qn,[C(\"button\",{type:\"button\",class:\"wl-btn\",onClick:t[0]||(t[0]=(...t)=>e.refresh&&e.refresh(...t)),textContent:x(e.i18n.refresh)},null,8,Zn)])):(g(),f(y,{key:2},[\"loading\"===e.status?(g(),f(\"div\",Yn,[S(s,{size:30})])):e.data.length?e.page<e.totalPages?(g(),f(y,{key:2},[k(\" Load more button \"),C(\"div\",el,[C(\"button\",{type:\"button\",class:\"wl-btn\",onClick:t[1]||(t[1]=(...t)=>e.loadMore&&e.loadMore(...t)),textContent:x(e.i18n.more)},null,8,tl)])],2112)):k(\"v-if\",!0):(g(),f(\"div\",{key:1,class:\"wl-empty\",textContent:x(e.i18n.sofa)},null,8,Xn))],64)),k(\" Copyright Information \"),e.config.copyright?(g(),f(\"div\",nl,[ll,ol,M(\" v\"+x(e.version),1)])):k(\"v-if\",!0)])}],[\"__file\",\"Waline.vue\"]]);const il=\"2.8.1\";export{al as Waline,il as version};\n//# sourceMappingURL=component.esm.js.map\n", null, "import d from \"../../../../node_modules/vuepress-plugin-comment2/lib/client/components/Waline.js\";export default d;"],
  "mappings": "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",
  "names": ["n", "e", "noopTest", "lexer", "options", "t", "text", "mangle", "smartypants", "parser", "args", "walkTokens", "H", "N", "window", "B", "V", "e", "a", "_", "t", "n", "apply", "this", "fn", "thisArg", "args", "navigator", "userAgent", "test", "F", "D", "W", "l", "o", "i", "maxWait", "clearTimeout", "setTimeout", "G", "Object", "getOwnPropertySymbols", "q", "prototype", "hasOwnProperty", "J", "propertyIsEnumerable", "Q", "defineProperty", "Z", "defineProperties", "Y", "getOwnPropertyDescriptors", "X", "ee", "te", "ne", "enumerable", "configurable", "writable", "value", "le", "eventFilter", "call", "indexOf", "r", "pause", "s", "resume", "c", "isActive", "u", "m", "d", "stop", "oe", "ae", "document", "re", "globalThis", "global", "self", "se", "ce", "ue", "me", "de", "ve", "pe", "ge", "fe", "boolean", "read", "write", "String", "object", "JSON", "parse", "stringify", "number", "Number", "parseFloat", "any", "string", "map", "Map", "Array", "from", "entries", "set", "Set", "date", "Date", "toISOString", "he", "flush", "deep", "listenToStorageChanges", "writeDefaults", "mergeDefaults", "shallow", "v", "p", "onError", "g", "console", "error", "f", "localStorage", "h", "y", "isArray", "isNaN", "w", "serializer", "b", "k", "removeItem", "setItem", "$el", "addEventListener", "removeEventListener", "immediate", "C", "key", "newValue", "getItem", "ye", "we", "be", "ke", "Ce", "Ie", "$e", "UP", "RIGHT", "DOWN", "LEFT", "NONE", "Le", "xe", "Ee", "Oe", "Re", "Ae", "linear", "easeInSine", "easeOutSine", "easeInOutSine", "easeInQuad", "easeOutQuad", "easeInOutQuad", "easeInCubic", "easeOutCubic", "easeInOutCubic", "easeInQuart", "easeOutQuart", "easeInOutQuart", "easeInQuint", "easeOutQuint", "easeInOutQuint", "easeInExpo", "easeOutExpo", "easeInOutExpo", "easeInCirc", "easeOutCirc", "easeInOutCirc", "easeInBack", "easeOutBack", "easeInOutBack", "ze", "size", "width", "height", "viewBox", "preserveAspectRatio", "cx", "cy", "fill", "stroke", "strokeWidth", "attributeName", "type", "repeatCount", "dur", "values", "keyTimes", "Me", "name", "components", "LoadingIcon", "props", "items", "default", "columnWidth", "gap", "emits", "setup", "Math", "floor", "getBoundingClientRect", "async", "length", "children", "reduce", "dataset", "index", "push", "scrollY", "scrollTo", "top", "ResizeObserver", "observe", "unobserve", "columns", "state", "wall", "Pe", "__vccOpts", "Ue", "Te", "He", "ref", "class", "style", "src", "margin", "title", "loading", "onLoad", "onClick", "$emit", "Ne", "Be", "filter", "includes", "Ve", "Promise", "Error", "FileReader", "readAsDataURL", "onload", "result", "toString", "onerror", "_e", "Fe", "next", "keyword", "pos", "URLSearchParams", "fetch", "headers", "then", "json", "catch", "results", "search", "media", "tinygif", "url", "more", "De", "RegExp", "source", "We", "Ge", "qe", "replace", "Je", "Ke", "fromEntries", "Qe", "Ze", "Ye", "Xe", "et", "tt", "nt", "zh", "en", "jp", "ru", "lt", "decodeURI", "ot", "at", "it", "rt", "st", "ct", "ut", "vt", "pt", "ft", "serverURL", "lang", "token", "objectId", "method", "Authorization", "body", "ht", "yt", "find", "getAsFile", "wt", "bt", "kt", "Ct", "$t", "jt", "Lt", "St", "xt", "CloseIcon", "EmojiIcon", "ImageIcon", "ImageWall", "MarkdownIcon", "ariaHidden", "PreviewIcon", "GifIcon", "rootId", "replyId", "replyUser", "edit", "emit", "$", "nick", "mail", "link", "tabs", "S", "x", "j", "list", "E", "O", "R", "A", "z", "I", "locale", "M", "Boolean", "P", "imageUploader", "T", "selectionStart", "selectionEnd", "scrollTop", "substring", "focus", "uploading", "resolve", "alert", "message", "login", "wordLimit", "requiredMeta", "comment", "ua", "path", "display_name", "email", "nickError", "exec", "mailError", "anonymous", "wordHint", "pid", "rid", "eid", "errmsg", "data", "contains", "target", "clientHeight", "scrollHeight", "sessionStorage", "forEach", "orig", "highlighter", "texRenderer", "emojiMap", "setOptions", "highlight", "breaks", "smartLists", "smartypants", "level", "tokenizer", "raw", "text", "start", "use", "extensions", "match", "trim", "split", "U", "destroy", "emoji", "all", "folder", "icon", "prefix", "L", "config", "insert", "onChange", "files", "onDrop", "dataTransfer", "preventDefault", "onKeyDown", "ctrlKey", "metaKey", "onPaste", "clipboardData", "onLogin", "innerWidth", "innerHeight", "open", "encodeURIComponent", "postMessage", "close", "remember", "onLogout", "onProfile", "submitComment", "onImageWallScroll", "onGifSearch", "isLogin", "userInfo", "isSubmitting", "wordNumber", "isWordNumberLegal", "editor", "userMeta", "emojiTabIndex", "showEmoji", "gifData", "showGif", "canUploadImage", "previewText", "showPreview", "inputRefs", "editorRef", "emojiButtonRef", "emojiPopupRef", "gifButtonRef", "gifPopupRef", "imageUploadRef", "gifSearchInputRef", "Et", "Ot", "Rt", "At", "zt", "Mt", "Pt", "Ut", "Tt", "Ht", "Nt", "Bt", "Vt", "_t", "Ft", "Dt", "Wt", "href", "rel", "Gt", "qt", "Jt", "Kt", "Qt", "Zt", "Yt", "Xt", "tn", "nn", "ln", "on", "an", "rn", "sn", "cn", "un", "mn", "dn", "vn", "logout", "profile", "avatar", "alt", "textContent", "meta", "for", "optional", "id", "ref_for", "placeholder", "onKeydown", "preview", "innerHTML", "actived", "gif", "accept", "uploadImage", "illegal", "word", "disabled", "submit", "display", "gifSearchPlaceholder", "onInput", "onInsert", "onScroll", "referrerPolicy", "active", "cancelReply", "pn", "gn", "CommentBox", "DeleteIcon", "LikeIcon", "ReplyIcon", "EditIcon", "VerifiedIcon", "required", "reply", "controls", "interval", "requestAnimationFrame", "cancelAnimationFrame", "immediateCallback", "clearInterval", "setInterval", "now", "je", "getTime", "round", "seconds", "minutes", "hours", "days", "getDate", "getMonth", "getFullYear", "insertedAt", "user_id", "log", "isReplyingCurrent", "isEditingCurrent", "like", "time", "isAdmin", "isOwner", "commentStatus", "hn", "yn", "wn", "bn", "kn", "Cn", "In", "$n", "jn", "Ln", "Sn", "xn", "En", "On", "Rn", "An", "zn", "Mn", "Pn", "Un", "Tn", "Hn", "Nn", "Bn", "Vn", "_n", "CommentCard", "admin", "label", "sticky", "cancelLike", "addr", "browser", "os", "status", "unsticky", "onSubmit", "onCancelReply", "onCancelEdit", "onReply", "onLike", "onEdit", "onDelete", "onStatus", "onSticky", "location", "pathname", "dark", "pageSize", "copyright", "manual", "getElementById", "createElement", "head", "appendChild", "innerText", "removeChild", "AbortController", "page", "sortBy", "signal", "errno", "TypeError", "count", "totalPages", "abort", "bind", "darkmodeStyle", "i18n", "sortByItems", "loadMore", "refresh", "onSortByChange", "unshift", "onStatusChange", "confirm", "some", "slice", "version", "Fn", "Dn", "Wn", "Gn", "qn", "Jn", "Kn", "Qn", "Zn", "Yn", "Xn", "el", "tl", "nl", "ll", "ol", "al", "sofa", "walineOption", "COMMENT_OPTIONS", "walineLocales", "WALINE_LOCALES", "enableWaline", "metaIcon", "import", "Waline", "defineComponent", "route", "useRoute", "frontmatter", "usePageFrontmatter", "usePageLang", "walineLocale", "useLocaleConfig", "enableComment", "computed", "pluginConfig", "pageConfig", "enablePageViews", "pageview", "walineProps", "withBase", "onMounted", "watch", "pageviewCount", "delay"]
}
